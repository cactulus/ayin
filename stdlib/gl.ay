alias GLboolean bool;
alias GLbitfield u32;
alias GLenum u32;
alias GLsizei s32;
alias GLint s32;
alias GLuint u32;
alias GLfixed s32;
alias GLubyte u8;
alias GLclampf f32;
alias GLfloat f32;
alias GLclampx s32;
alias GLintptr *s32;
alias GLsizeiptr u64;
alias GLvoid u8;
alias GLdouble f64;
alias GLshort s16;
alias GLushort u16;
alias GLbyte s8;
 
GL_FALSE :: 0;
GL_TRUE :: 1;
GL_FLAT :: 0x1D00;
GL_SMOOTH :: 0x1D01;
GL_MODULATE :: 0x2100;
GL_DECAL :: 0x2101;
GL_ADD :: 0x0104;
GL_DEPTH_BUFFER_BIT :: 0x00000100;
GL_STENCIL_BUFFER_BIT :: 0x00000400;
GL_COLOR_BUFFER_BIT :: 0x00004000;
GL_POINTS :: 0x0000;
GL_LINES :: 0x0001;
GL_LINE_LOOP :: 0x0002;
GL_LINE_STRIP :: 0x0003;
GL_TRIANGLES :: 0x0004;
GL_TRIANGLE_STRIP :: 0x0005;
GL_TRIANGLE_FAN :: 0x0006;
GL_QUADS :: 0x0007;
GL_NEVER :: 0x0200;
GL_LESS :: 0x0201;
GL_EQUAL :: 0x0202;
GL_LEQUAL :: 0x0203;
GL_GREATER :: 0x0204;
GL_NOTEQUAL :: 0x0205;
GL_GEQUAL :: 0x0206;
GL_ALWAYS :: 0x0207;
GL_SRC_COLOR :: 0x0300;
GL_ONE_MINUS_SRC_COLOR :: 0x0301;
GL_SRC_ALPHA :: 0x0302;
GL_ONE_MINUS_SRC_ALPHA :: 0x0303;
GL_DST_ALPHA :: 0x0304;
GL_ONE_MINUS_DST_ALPHA :: 0x0305;
GL_DST_COLOR :: 0x0306;
GL_ONE_MINUS_DST_COLOR :: 0x0307;
GL_SRC_ALPHA_SATURATE :: 0x0308;
GL_FRONT_LEFT :: 0x0400;
GL_FRONT_RIGHT :: 0x0401;
GL_BACK_LEFT :: 0x0402;
GL_BACK_RIGHT :: 0x0403;
GL_FRONT :: 0x0404;
GL_BACK :: 0x0405;
GL_LEFT :: 0x0406;
GL_RIGHT :: 0x0407;
GL_FRONT_AND_BACK :: 0x0408;
GL_INVALID_ENUM :: 0x0500;
GL_INVALID_VALUE :: 0x0501;
GL_INVALID_OPERATION :: 0x0502;
GL_OUT_OF_MEMORY :: 0x0505;
GL_CW :: 0x0900;
GL_CCW :: 0x0901;
GL_POINT_SIZE :: 0x0B11;
GL_POINT_SIZE_RANGE :: 0x0B12;
GL_POINT_SIZE_GRANULARITY :: 0x0B13;
GL_LINE_SMOOTH :: 0x0B20;
GL_LINE_WIDTH :: 0x0B21;
GL_LINE_WIDTH_RANGE :: 0x0B22;
GL_LINE_WIDTH_GRANULARITY :: 0x0B23;
GL_POLYGON_MODE :: 0x0B40;
GL_POLYGON_SMOOTH :: 0x0B41;
GL_CULL_FACE :: 0x0B44;
GL_CULL_FACE_MODE :: 0x0B45;
GL_FRONT_FACE :: 0x0B46;
GL_DEPTH_RANGE :: 0x0B70;
GL_DEPTH_TEST :: 0x0B71;
GL_DEPTH_WRITEMASK :: 0x0B72;
GL_DEPTH_CLEAR_VALUE :: 0x0B73;
GL_DEPTH_FUNC :: 0x0B74;
GL_STENCIL_TEST :: 0x0B90;
GL_STENCIL_CLEAR_VALUE :: 0x0B91;
GL_STENCIL_FUNC :: 0x0B92;
GL_STENCIL_VALUE_MASK :: 0x0B93;
GL_STENCIL_FAIL :: 0x0B94;
GL_STENCIL_PASS_DEPTH_FAIL :: 0x0B95;
GL_STENCIL_PASS_DEPTH_PASS :: 0x0B96;
GL_STENCIL_REF :: 0x0B97;
GL_STENCIL_WRITEMASK :: 0x0B98;
GL_VIEWPORT :: 0x0BA2;
GL_DITHER :: 0x0BD0;
GL_BLEND_DST :: 0x0BE0;
GL_BLEND_SRC :: 0x0BE1;
GL_BLEND :: 0x0BE2;
GL_LOGIC_OP_MODE :: 0x0BF0;
GL_DRAW_BUFFER :: 0x0C01;
GL_READ_BUFFER :: 0x0C02;
GL_SCISSOR_BOX :: 0x0C10;
GL_SCISSOR_TEST :: 0x0C11;
GL_COLOR_CLEAR_VALUE :: 0x0C22;
GL_COLOR_WRITEMASK :: 0x0C23;
GL_DOUBLEBUFFER :: 0x0C32;
GL_STEREO :: 0x0C33;
GL_LINE_SMOOTH_HINT :: 0x0C52;
GL_POLYGON_SMOOTH_HINT :: 0x0C53;
GL_UNPACK_SWAP_BYTES :: 0x0CF0;
GL_UNPACK_LSB_FIRST :: 0x0CF1;
GL_UNPACK_ROW_LENGTH :: 0x0CF2;
GL_UNPACK_SKIP_ROWS :: 0x0CF3;
GL_UNPACK_SKIP_PIXELS :: 0x0CF4;
GL_UNPACK_ALIGNMENT :: 0x0CF5;
GL_PACK_SWAP_BYTES :: 0x0D00;
GL_PACK_LSB_FIRST :: 0x0D01;
GL_PACK_ROW_LENGTH :: 0x0D02;
GL_PACK_SKIP_ROWS :: 0x0D03;
GL_PACK_SKIP_PIXELS :: 0x0D04;
GL_PACK_ALIGNMENT :: 0x0D05;
GL_MAX_TEXTURE_SIZE :: 0x0D33;
GL_MAX_VIEWPORT_DIMS :: 0x0D3A;
GL_SUBPIXEL_BITS :: 0x0D50;
GL_TEXTURE_1D :: 0x0DE0;
GL_TEXTURE_2D :: 0x0DE1;
GL_TEXTURE_WIDTH :: 0x1000;
GL_TEXTURE_HEIGHT :: 0x1001;
GL_TEXTURE_BORDER_COLOR :: 0x1004;
GL_DONT_CARE :: 0x1100;
GL_FASTEST :: 0x1101;
GL_NICEST :: 0x1102;
GL_BYTE :: 0x1400;
GL_UNSIGNED_BYTE :: 0x1401;
GL_SHORT :: 0x1402;
GL_UNSIGNED_SHORT :: 0x1403;
GL_INT :: 0x1404;
GL_UNSIGNED_INT :: 0x1405;
GL_FLOAT :: 0x1406;
GL_STACK_OVERFLOW :: 0x0503;
GL_STACK_UNDERFLOW :: 0x0504;
GL_CLEAR :: 0x1500;
GL_AND :: 0x1501;
GL_AND_REVERSE :: 0x1502;
GL_COPY :: 0x1503;
GL_AND_INVERTED :: 0x1504;
GL_NOOP :: 0x1505;
GL_XOR :: 0x1506;
GL_OR :: 0x1507;
GL_NOR :: 0x1508;
GL_EQUIV :: 0x1509;
GL_INVERT :: 0x150A;
GL_OR_REVERSE :: 0x150B;
GL_COPY_INVERTED :: 0x150C;
GL_OR_INVERTED :: 0x150D;
GL_NAND :: 0x150E;
GL_SET :: 0x150F;
GL_TEXTURE :: 0x1702;
GL_COLOR :: 0x1800;
GL_DEPTH :: 0x1801;
GL_STENCIL :: 0x1802;
GL_STENCIL_INDEX :: 0x1901;
GL_DEPTH_COMPONENT :: 0x1902;
GL_RED :: 0x1903;
GL_GREEN :: 0x1904;
GL_BLUE :: 0x1905;
GL_ALPHA :: 0x1906;
GL_RGB :: 0x1907;
GL_RGBA :: 0x1908;
GL_POINT :: 0x1B00;
GL_LINE :: 0x1B01;
GL_FILL :: 0x1B02;
GL_KEEP :: 0x1E00;
GL_REPLACE :: 0x1E01;
GL_INCR :: 0x1E02;
GL_DECR :: 0x1E03;
GL_VENDOR :: 0x1F00;
GL_RENDERER :: 0x1F01;
GL_VERSION :: 0x1F02;
GL_EXTENSIONS :: 0x1F03;
GL_NEAREST :: 0x2600;
GL_LINEAR :: 0x2601;
GL_NEAREST_MIPMAP_NEAREST :: 0x2700;
GL_LINEAR_MIPMAP_NEAREST :: 0x2701;
GL_NEAREST_MIPMAP_LINEAR :: 0x2702;
GL_LINEAR_MIPMAP_LINEAR :: 0x2703;
GL_TEXTURE_MAG_FILTER :: 0x2800;
GL_TEXTURE_MIN_FILTER :: 0x2801;
GL_TEXTURE_WRAP_S :: 0x2802;
GL_TEXTURE_WRAP_T :: 0x2803;
GL_REPEAT :: 0x2901;
GL_COLOR_LOGIC_OP :: 0x0BF2;
GL_POLYGON_OFFSET_UNITS :: 0x2A00;
GL_POLYGON_OFFSET_POINT :: 0x2A01;
GL_POLYGON_OFFSET_LINE :: 0x2A02;
GL_POLYGON_OFFSET_FILL :: 0x8037;
GL_POLYGON_OFFSET_FACTOR :: 0x8038;
GL_TEXTURE_BINDING_1D :: 0x8068;
GL_TEXTURE_BINDING_2D :: 0x8069;
GL_TEXTURE_INTERNAL_FORMAT :: 0x1003;
GL_TEXTURE_RED_SIZE :: 0x805C;
GL_TEXTURE_GREEN_SIZE :: 0x805D;
GL_TEXTURE_BLUE_SIZE :: 0x805E;
GL_TEXTURE_ALPHA_SIZE :: 0x805F;
GL_DOUBLE :: 0x140A;
GL_PROXY_TEXTURE_1D :: 0x8063;
GL_PROXY_TEXTURE_2D :: 0x8064;
GL_R3_G3_B2 :: 0x2A10;
GL_RGB4 :: 0x804F;
GL_RGB5 :: 0x8050;
GL_RGB8 :: 0x8051;
GL_RGB10 :: 0x8052;
GL_RGB12 :: 0x8053;
GL_RGB16 :: 0x8054;
GL_RGBA2 :: 0x8055;
GL_RGBA4 :: 0x8056;
GL_RGB5_A1 :: 0x8057;
GL_RGBA8 :: 0x8058;
GL_RGB10_A2 :: 0x8059;
GL_RGBA12 :: 0x805A;
GL_RGBA16 :: 0x805B;
GL_VERTEX_ARRAY :: 0x8074;
GL_UNSIGNED_BYTE_3_3_2 :: 0x8032;
GL_UNSIGNED_SHORT_4_4_4_4 :: 0x8033;
GL_UNSIGNED_SHORT_5_5_5_1 :: 0x8034;
GL_UNSIGNED_INT_8_8_8_8 :: 0x8035;
GL_UNSIGNED_INT_10_10_10_2 :: 0x8036;
GL_TEXTURE_BINDING_3D :: 0x806A;
GL_PACK_SKIP_IMAGES :: 0x806B;
GL_PACK_IMAGE_HEIGHT :: 0x806C;
GL_UNPACK_SKIP_IMAGES :: 0x806D;
GL_UNPACK_IMAGE_HEIGHT :: 0x806E;
GL_TEXTURE_3D :: 0x806F;
GL_PROXY_TEXTURE_3D :: 0x8070;
GL_TEXTURE_DEPTH :: 0x8071;
GL_TEXTURE_WRAP_R :: 0x8072;
GL_MAX_3D_TEXTURE_SIZE :: 0x8073;
GL_UNSIGNED_BYTE_2_3_3_REV :: 0x8362;
GL_UNSIGNED_SHORT_5_6_5 :: 0x8363;
GL_UNSIGNED_SHORT_5_6_5_REV :: 0x8364;
GL_UNSIGNED_SHORT_4_4_4_4_REV :: 0x8365;
GL_UNSIGNED_SHORT_1_5_5_5_REV :: 0x8366;
GL_UNSIGNED_INT_8_8_8_8_REV :: 0x8367;
GL_UNSIGNED_INT_2_10_10_10_REV :: 0x8368;
GL_BGR :: 0x80E0;
GL_BGRA :: 0x80E1;
GL_MAX_ELEMENTS_VERTICES :: 0x80E8;
GL_MAX_ELEMENTS_INDICES :: 0x80E9;
GL_CLAMP_TO_EDGE :: 0x812F;
GL_TEXTURE_MIN_LOD :: 0x813A;
GL_TEXTURE_MAX_LOD :: 0x813B;
GL_TEXTURE_BASE_LEVEL :: 0x813C;
GL_TEXTURE_MAX_LEVEL :: 0x813D;
GL_SMOOTH_POINT_SIZE_RANGE :: 0x0B12;
GL_SMOOTH_POINT_SIZE_GRANULARITY :: 0x0B13;
GL_SMOOTH_LINE_WIDTH_RANGE :: 0x0B22;
GL_SMOOTH_LINE_WIDTH_GRANULARITY :: 0x0B23;
GL_ALIASED_LINE_WIDTH_RANGE :: 0x846E;
GL_TEXTURE0 :: 0x84C0;
GL_TEXTURE1 :: 0x84C1;
GL_TEXTURE2 :: 0x84C2;
GL_TEXTURE3 :: 0x84C3;
GL_TEXTURE4 :: 0x84C4;
GL_TEXTURE5 :: 0x84C5;
GL_TEXTURE6 :: 0x84C6;
GL_TEXTURE7 :: 0x84C7;
GL_TEXTURE8 :: 0x84C8;
GL_TEXTURE9 :: 0x84C9;
GL_TEXTURE10 :: 0x84CA;
GL_TEXTURE11 :: 0x84CB;
GL_TEXTURE12 :: 0x84CC;
GL_TEXTURE13 :: 0x84CD;
GL_TEXTURE14 :: 0x84CE;
GL_TEXTURE15 :: 0x84CF;
GL_TEXTURE16 :: 0x84D0;
GL_TEXTURE17 :: 0x84D1;
GL_TEXTURE18 :: 0x84D2;
GL_TEXTURE19 :: 0x84D3;
GL_TEXTURE20 :: 0x84D4;
GL_TEXTURE21 :: 0x84D5;
GL_TEXTURE22 :: 0x84D6;
GL_TEXTURE23 :: 0x84D7;
GL_TEXTURE24 :: 0x84D8;
GL_TEXTURE25 :: 0x84D9;
GL_TEXTURE26 :: 0x84DA;
GL_TEXTURE27 :: 0x84DB;
GL_TEXTURE28 :: 0x84DC;
GL_TEXTURE29 :: 0x84DD;
GL_TEXTURE30 :: 0x84DE;
GL_TEXTURE31 :: 0x84DF;
GL_ACTIVE_TEXTURE :: 0x84E0;
GL_MULTISAMPLE :: 0x809D;
GL_SAMPLE_ALPHA_TO_COVERAGE :: 0x809E;
GL_SAMPLE_ALPHA_TO_ONE :: 0x809F;
GL_SAMPLE_COVERAGE :: 0x80A0;
GL_SAMPLE_BUFFERS :: 0x80A8;
GL_SAMPLES :: 0x80A9;
GL_SAMPLE_COVERAGE_VALUE :: 0x80AA;
GL_SAMPLE_COVERAGE_INVERT :: 0x80AB;
GL_TEXTURE_CUBE_MAP :: 0x8513;
GL_TEXTURE_BINDING_CUBE_MAP :: 0x8514;
GL_TEXTURE_CUBE_MAP_POSITIVE_X :: 0x8515;
GL_TEXTURE_CUBE_MAP_NEGATIVE_X :: 0x8516;
GL_TEXTURE_CUBE_MAP_POSITIVE_Y :: 0x8517;
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y :: 0x8518;
GL_TEXTURE_CUBE_MAP_POSITIVE_Z :: 0x8519;
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z :: 0x851A;
GL_PROXY_TEXTURE_CUBE_MAP :: 0x851B;
GL_MAX_CUBE_MAP_TEXTURE_SIZE :: 0x851C;
GL_COMPRESSED_RGB :: 0x84ED;
GL_COMPRESSED_RGBA :: 0x84EE;
GL_TEXTURE_COMPRESSION_HINT :: 0x84EF;
GL_TEXTURE_COMPRESSED_IMAGE_SIZE :: 0x86A0;
GL_TEXTURE_COMPRESSED :: 0x86A1;
GL_NUM_COMPRESSED_TEXTURE_FORMATS :: 0x86A2;
GL_COMPRESSED_TEXTURE_FORMATS :: 0x86A3;
GL_CLAMP_TO_BORDER :: 0x812D;
GL_BLEND_DST_RGB :: 0x80C8;
GL_BLEND_SRC_RGB :: 0x80C9;
GL_BLEND_DST_ALPHA :: 0x80CA;
GL_BLEND_SRC_ALPHA :: 0x80CB;
GL_POINT_FADE_THRESHOLD_SIZE :: 0x8128;
GL_DEPTH_COMPONENT16 :: 0x81A5;
GL_DEPTH_COMPONENT24 :: 0x81A6;
GL_DEPTH_COMPONENT32 :: 0x81A7;
GL_MIRRORED_REPEAT :: 0x8370;
GL_MAX_TEXTURE_LOD_BIAS :: 0x84FD;
GL_TEXTURE_LOD_BIAS :: 0x8501;
GL_INCR_WRAP :: 0x8507;
GL_DECR_WRAP :: 0x8508;
GL_TEXTURE_DEPTH_SIZE :: 0x884A;
GL_TEXTURE_COMPARE_MODE :: 0x884C;
GL_TEXTURE_COMPARE_FUNC :: 0x884D;
GL_BLEND_COLOR :: 0x8005;
GL_BLEND_EQUATION :: 0x8009;
GL_CONSTANT_COLOR :: 0x8001;
GL_ONE_MINUS_CONSTANT_COLOR :: 0x8002;
GL_CONSTANT_ALPHA :: 0x8003;
GL_ONE_MINUS_CONSTANT_ALPHA :: 0x8004;
GL_FUNC_ADD :: 0x8006;
GL_FUNC_REVERSE_SUBTRACT :: 0x800B;
GL_FUNC_SUBTRACT :: 0x800A;
GL_MIN :: 0x8007;
GL_MAX :: 0x8008;
GL_BUFFER_SIZE :: 0x8764;
GL_BUFFER_USAGE :: 0x8765;
GL_QUERY_COUNTER_BITS :: 0x8864;
GL_CURRENT_QUERY :: 0x8865;
GL_QUERY_RESULT :: 0x8866;
GL_QUERY_RESULT_AVAILABLE :: 0x8867;
GL_ARRAY_BUFFER :: 0x8892;
GL_ELEMENT_ARRAY_BUFFER :: 0x8893;
GL_ARRAY_BUFFER_BINDING :: 0x8894;
GL_ELEMENT_ARRAY_BUFFER_BINDING :: 0x8895;
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING :: 0x889F;
GL_READ_ONLY :: 0x88B8;
GL_WRITE_ONLY :: 0x88B9;
GL_READ_WRITE :: 0x88BA;
GL_BUFFER_ACCESS :: 0x88BB;
GL_BUFFER_MAPPED :: 0x88BC;
GL_BUFFER_MAP_POINTER :: 0x88BD;
GL_STREAM_DRAW :: 0x88E0;
GL_STREAM_READ :: 0x88E1;
GL_STREAM_COPY :: 0x88E2;
GL_STATIC_DRAW :: 0x88E4;
GL_STATIC_READ :: 0x88E5;
GL_STATIC_COPY :: 0x88E6;
GL_DYNAMIC_DRAW :: 0x88E8;
GL_DYNAMIC_READ :: 0x88E9;
GL_DYNAMIC_COPY :: 0x88EA;
GL_SAMPLES_PASSED :: 0x8914;
GL_SRC1_ALPHA :: 0x8589;
GL_BLEND_EQUATION_RGB :: 0x8009;
GL_VERTEX_ATTRIB_ARRAY_ENABLED :: 0x8622;
GL_VERTEX_ATTRIB_ARRAY_SIZE :: 0x8623;
GL_VERTEX_ATTRIB_ARRAY_STRIDE :: 0x8624;
GL_VERTEX_ATTRIB_ARRAY_TYPE :: 0x8625;
GL_CURRENT_VERTEX_ATTRIB :: 0x8626;
GL_VERTEX_PROGRAM_POINT_SIZE :: 0x8642;
GL_VERTEX_ATTRIB_ARRAY_POINTER :: 0x8645;
GL_STENCIL_BACK_FUNC :: 0x8800;
GL_STENCIL_BACK_FAIL :: 0x8801;
GL_STENCIL_BACK_PASS_DEPTH_FAIL :: 0x8802;
GL_STENCIL_BACK_PASS_DEPTH_PASS :: 0x8803;
GL_MAX_DRAW_BUFFERS :: 0x8824;
GL_DRAW_BUFFER0 :: 0x8825;
GL_DRAW_BUFFER1 :: 0x8826;
GL_DRAW_BUFFER2 :: 0x8827;
GL_DRAW_BUFFER3 :: 0x8828;
GL_DRAW_BUFFER4 :: 0x8829;
GL_DRAW_BUFFER5 :: 0x882A;
GL_DRAW_BUFFER6 :: 0x882B;
GL_DRAW_BUFFER7 :: 0x882C;
GL_DRAW_BUFFER8 :: 0x882D;
GL_DRAW_BUFFER9 :: 0x882E;
GL_DRAW_BUFFER10 :: 0x882F;
GL_DRAW_BUFFER11 :: 0x8830;
GL_DRAW_BUFFER12 :: 0x8831;
GL_DRAW_BUFFER13 :: 0x8832;
GL_DRAW_BUFFER14 :: 0x8833;
GL_DRAW_BUFFER15 :: 0x8834;
GL_BLEND_EQUATION_ALPHA :: 0x883D;
GL_MAX_VERTEX_ATTRIBS :: 0x8869;
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED :: 0x886A;
GL_MAX_TEXTURE_IMAGE_UNITS :: 0x8872;
GL_FRAGMENT_SHADER :: 0x8B30;
GL_VERTEX_SHADER :: 0x8B31;
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS :: 0x8B49;
GL_MAX_VERTEX_UNIFORM_COMPONENTS :: 0x8B4A;
GL_MAX_VARYING_FLOATS :: 0x8B4B;
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS :: 0x8B4C;
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS :: 0x8B4D;
GL_SHADER_TYPE :: 0x8B4F;
GL_FLOAT_VEC2 :: 0x8B50;
GL_FLOAT_VEC3 :: 0x8B51;
GL_FLOAT_VEC4 :: 0x8B52;
GL_INT_VEC2 :: 0x8B53;
GL_INT_VEC3 :: 0x8B54;
GL_INT_VEC4 :: 0x8B55;
GL_BOOL :: 0x8B56;
GL_BOOL_VEC2 :: 0x8B57;
GL_BOOL_VEC3 :: 0x8B58;
GL_BOOL_VEC4 :: 0x8B59;
GL_FLOAT_MAT2 :: 0x8B5A;
GL_FLOAT_MAT3 :: 0x8B5B;
GL_FLOAT_MAT4 :: 0x8B5C;
GL_SAMPLER_1D :: 0x8B5D;
GL_SAMPLER_2D :: 0x8B5E;
GL_SAMPLER_3D :: 0x8B5F;
GL_SAMPLER_CUBE :: 0x8B60;
GL_SAMPLER_1D_SHADOW :: 0x8B61;
GL_SAMPLER_2D_SHADOW :: 0x8B62;
GL_DELETE_STATUS :: 0x8B80;
GL_COMPILE_STATUS :: 0x8B81;
GL_LINK_STATUS :: 0x8B82;
GL_VALIDATE_STATUS :: 0x8B83;
GL_INFO_LOG_LENGTH :: 0x8B84;
GL_ATTACHED_SHADERS :: 0x8B85;
GL_ACTIVE_UNIFORMS :: 0x8B86;
GL_ACTIVE_UNIFORM_MAX_LENGTH :: 0x8B87;
GL_SHADER_SOURCE_LENGTH :: 0x8B88;
GL_ACTIVE_ATTRIBUTES :: 0x8B89;
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH :: 0x8B8A;
GL_FRAGMENT_SHADER_DERIVATIVE_HINT :: 0x8B8B;
GL_SHADING_LANGUAGE_VERSION :: 0x8B8C;
GL_CURRENT_PROGRAM :: 0x8B8D;
GL_POINT_SPRITE_COORD_ORIGIN :: 0x8CA0;
GL_LOWER_LEFT :: 0x8CA1;
GL_UPPER_LEFT :: 0x8CA2;
GL_STENCIL_BACK_REF :: 0x8CA3;
GL_STENCIL_BACK_VALUE_MASK :: 0x8CA4;
GL_STENCIL_BACK_WRITEMASK :: 0x8CA5;
GL_PIXEL_PACK_BUFFER :: 0x88EB;
GL_PIXEL_UNPACK_BUFFER :: 0x88EC;
GL_PIXEL_PACK_BUFFER_BINDING :: 0x88ED;
GL_PIXEL_UNPACK_BUFFER_BINDING :: 0x88EF;
GL_SRGB :: 0x8C40;
GL_SRGB8 :: 0x8C41;
GL_SRGB_ALPHA :: 0x8C42;
GL_SRGB8_ALPHA8 :: 0x8C43;
GL_COMPRESSED_SRGB :: 0x8C48;
GL_COMPRESSED_SRGB_ALPHA :: 0x8C49;
GL_COMPARE_REF_TO_TEXTURE :: 0x884E;
GL_CLIP_DISTANCE0 :: 0x3000;
GL_CLIP_DISTANCE1 :: 0x3001;
GL_CLIP_DISTANCE2 :: 0x3002;
GL_CLIP_DISTANCE3 :: 0x3003;
GL_CLIP_DISTANCE4 :: 0x3004;
GL_CLIP_DISTANCE5 :: 0x3005;
GL_CLIP_DISTANCE6 :: 0x3006;
GL_CLIP_DISTANCE7 :: 0x3007;
GL_MAX_CLIP_DISTANCES :: 0x0D32;
GL_MAJOR_VERSION :: 0x821B;
GL_MINOR_VERSION :: 0x821C;
GL_NUM_EXTENSIONS :: 0x821D;
GL_CONTEXT_FLAGS :: 0x821E;
GL_COMPRESSED_RED :: 0x8225;
GL_COMPRESSED_RG :: 0x8226;
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT :: 0x00000001;
GL_RGBA32F :: 0x8814;
GL_RGB32F :: 0x8815;
GL_RGBA16F :: 0x881A;
GL_RGB16F :: 0x881B;
GL_VERTEX_ATTRIB_ARRAY_INTEGER :: 0x88FD;
GL_MAX_ARRAY_TEXTURE_LAYERS :: 0x88FF;
GL_MIN_PROGRAM_TEXEL_OFFSET :: 0x8904;
GL_MAX_PROGRAM_TEXEL_OFFSET :: 0x8905;
GL_CLAMP_READ_COLOR :: 0x891C;
GL_FIXED_ONLY :: 0x891D;
GL_MAX_VARYING_COMPONENTS :: 0x8B4B;
GL_TEXTURE_1D_ARRAY :: 0x8C18;
GL_PROXY_TEXTURE_1D_ARRAY :: 0x8C19;
GL_TEXTURE_2D_ARRAY :: 0x8C1A;
GL_PROXY_TEXTURE_2D_ARRAY :: 0x8C1B;
GL_TEXTURE_BINDING_1D_ARRAY :: 0x8C1C;
GL_TEXTURE_BINDING_2D_ARRAY :: 0x8C1D;
GL_R11F_G11F_B10F :: 0x8C3A;
GL_UNSIGNED_INT_10F_11F_11F_REV :: 0x8C3B;
GL_RGB9_E5 :: 0x8C3D;
GL_UNSIGNED_INT_5_9_9_9_REV :: 0x8C3E;
GL_TEXTURE_SHARED_SIZE :: 0x8C3F;
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH :: 0x8C76;
GL_TRANSFORM_FEEDBACK_BUFFER_MODE :: 0x8C7F;
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS :: 0x8C80;
GL_TRANSFORM_FEEDBACK_VARYINGS :: 0x8C83;
GL_TRANSFORM_FEEDBACK_BUFFER_START :: 0x8C84;
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE :: 0x8C85;
GL_PRIMITIVES_GENERATED :: 0x8C87;
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN :: 0x8C88;
GL_RASTERIZER_DISCARD :: 0x8C89;
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS :: 0x8C8A;
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS :: 0x8C8B;
GL_INTERLEAVED_ATTRIBS :: 0x8C8C;
GL_SEPARATE_ATTRIBS :: 0x8C8D;
GL_TRANSFORM_FEEDBACK_BUFFER :: 0x8C8E;
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING :: 0x8C8F;
GL_RGBA32UI :: 0x8D70;
GL_RGB32UI :: 0x8D71;
GL_RGBA16UI :: 0x8D76;
GL_RGB16UI :: 0x8D77;
GL_RGBA8UI :: 0x8D7C;
GL_RGB8UI :: 0x8D7D;
GL_RGBA32I :: 0x8D82;
GL_RGB32I :: 0x8D83;
GL_RGBA16I :: 0x8D88;
GL_RGB16I :: 0x8D89;
GL_RGBA8I :: 0x8D8E;
GL_RGB8I :: 0x8D8F;
GL_RED_INTEGER :: 0x8D94;
GL_GREEN_INTEGER :: 0x8D95;
GL_BLUE_INTEGER :: 0x8D96;
GL_RGB_INTEGER :: 0x8D98;
GL_RGBA_INTEGER :: 0x8D99;
GL_BGR_INTEGER :: 0x8D9A;
GL_BGRA_INTEGER :: 0x8D9B;
GL_SAMPLER_1D_ARRAY :: 0x8DC0;
GL_SAMPLER_2D_ARRAY :: 0x8DC1;
GL_SAMPLER_1D_ARRAY_SHADOW :: 0x8DC3;
GL_SAMPLER_2D_ARRAY_SHADOW :: 0x8DC4;
GL_SAMPLER_CUBE_SHADOW :: 0x8DC5;
GL_UNSIGNED_INT_VEC2 :: 0x8DC6;
GL_UNSIGNED_INT_VEC3 :: 0x8DC7;
GL_UNSIGNED_INT_VEC4 :: 0x8DC8;
GL_INT_SAMPLER_1D :: 0x8DC9;
GL_INT_SAMPLER_2D :: 0x8DCA;
GL_INT_SAMPLER_3D :: 0x8DCB;
GL_INT_SAMPLER_CUBE :: 0x8DCC;
GL_INT_SAMPLER_1D_ARRAY :: 0x8DCE;
GL_INT_SAMPLER_2D_ARRAY :: 0x8DCF;
GL_UNSIGNED_INT_SAMPLER_1D :: 0x8DD1;
GL_UNSIGNED_INT_SAMPLER_2D :: 0x8DD2;
GL_UNSIGNED_INT_SAMPLER_3D :: 0x8DD3;
GL_UNSIGNED_INT_SAMPLER_CUBE :: 0x8DD4;
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY :: 0x8DD6;
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY :: 0x8DD7;
GL_QUERY_WAIT :: 0x8E13;
GL_QUERY_NO_WAIT :: 0x8E14;
GL_QUERY_BY_REGION_WAIT :: 0x8E15;
GL_QUERY_BY_REGION_NO_WAIT :: 0x8E16;
GL_BUFFER_ACCESS_FLAGS :: 0x911F;
GL_BUFFER_MAP_LENGTH :: 0x9120;
GL_BUFFER_MAP_OFFSET :: 0x9121;
GL_DEPTH_COMPONENT32F :: 0x8CAC;
GL_DEPTH32F_STENCIL8 :: 0x8CAD;
GL_FLOAT_32_UNSIGNED_INT_24_8_REV :: 0x8DAD;
GL_INVALID_FRAMEBUFFER_OPERATION :: 0x0506;
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING :: 0x8210;
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE :: 0x8211;
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE :: 0x8212;
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE :: 0x8213;
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE :: 0x8214;
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE :: 0x8215;
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE :: 0x8216;
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE :: 0x8217;
GL_FRAMEBUFFER_DEFAULT :: 0x8218;
GL_FRAMEBUFFER_UNDEFINED :: 0x8219;
GL_DEPTH_STENCIL_ATTACHMENT :: 0x821A;
GL_MAX_RENDERBUFFER_SIZE :: 0x84E8;
GL_DEPTH_STENCIL :: 0x84F9;
GL_UNSIGNED_INT_24_8 :: 0x84FA;
GL_DEPTH24_STENCIL8 :: 0x88F0;
GL_TEXTURE_STENCIL_SIZE :: 0x88F1;
GL_TEXTURE_RED_TYPE :: 0x8C10;
GL_TEXTURE_GREEN_TYPE :: 0x8C11;
GL_TEXTURE_BLUE_TYPE :: 0x8C12;
GL_TEXTURE_ALPHA_TYPE :: 0x8C13;
GL_TEXTURE_DEPTH_TYPE :: 0x8C16;
GL_UNSIGNED_NORMALIZED :: 0x8C17;
GL_FRAMEBUFFER_BINDING :: 0x8CA6;
GL_DRAW_FRAMEBUFFER_BINDING :: 0x8CA6;
GL_RENDERBUFFER_BINDING :: 0x8CA7;
GL_READ_FRAMEBUFFER :: 0x8CA8;
GL_DRAW_FRAMEBUFFER :: 0x8CA9;
GL_READ_FRAMEBUFFER_BINDING :: 0x8CAA;
GL_RENDERBUFFER_SAMPLES :: 0x8CAB;
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE :: 0x8CD0;
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME :: 0x8CD1;
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL :: 0x8CD2;
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE :: 0x8CD3;
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER :: 0x8CD4;
GL_FRAMEBUFFER_COMPLETE :: 0x8CD5;
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT :: 0x8CD6;
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT :: 0x8CD7;
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER :: 0x8CDB;
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER :: 0x8CDC;
GL_FRAMEBUFFER_UNSUPPORTED :: 0x8CDD;
GL_MAX_COLOR_ATTACHMENTS :: 0x8CDF;
GL_COLOR_ATTACHMENT0 :: 0x8CE0;
GL_COLOR_ATTACHMENT1 :: 0x8CE1;
GL_COLOR_ATTACHMENT2 :: 0x8CE2;
GL_COLOR_ATTACHMENT3 :: 0x8CE3;
GL_COLOR_ATTACHMENT4 :: 0x8CE4;
GL_COLOR_ATTACHMENT5 :: 0x8CE5;
GL_COLOR_ATTACHMENT6 :: 0x8CE6;
GL_COLOR_ATTACHMENT7 :: 0x8CE7;
GL_COLOR_ATTACHMENT8 :: 0x8CE8;
GL_COLOR_ATTACHMENT9 :: 0x8CE9;
GL_COLOR_ATTACHMENT10 :: 0x8CEA;
GL_COLOR_ATTACHMENT11 :: 0x8CEB;
GL_COLOR_ATTACHMENT12 :: 0x8CEC;
GL_COLOR_ATTACHMENT13 :: 0x8CED;
GL_COLOR_ATTACHMENT14 :: 0x8CEE;
GL_COLOR_ATTACHMENT15 :: 0x8CEF;
GL_COLOR_ATTACHMENT16 :: 0x8CF0;
GL_COLOR_ATTACHMENT17 :: 0x8CF1;
GL_COLOR_ATTACHMENT18 :: 0x8CF2;
GL_COLOR_ATTACHMENT19 :: 0x8CF3;
GL_COLOR_ATTACHMENT20 :: 0x8CF4;
GL_COLOR_ATTACHMENT21 :: 0x8CF5;
GL_COLOR_ATTACHMENT22 :: 0x8CF6;
GL_COLOR_ATTACHMENT23 :: 0x8CF7;
GL_COLOR_ATTACHMENT24 :: 0x8CF8;
GL_COLOR_ATTACHMENT25 :: 0x8CF9;
GL_COLOR_ATTACHMENT26 :: 0x8CFA;
GL_COLOR_ATTACHMENT27 :: 0x8CFB;
GL_COLOR_ATTACHMENT28 :: 0x8CFC;
GL_COLOR_ATTACHMENT29 :: 0x8CFD;
GL_COLOR_ATTACHMENT30 :: 0x8CFE;
GL_COLOR_ATTACHMENT31 :: 0x8CFF;
GL_DEPTH_ATTACHMENT :: 0x8D00;
GL_STENCIL_ATTACHMENT :: 0x8D20;
GL_FRAMEBUFFER :: 0x8D40;
GL_RENDERBUFFER :: 0x8D41;
GL_RENDERBUFFER_WIDTH :: 0x8D42;
GL_RENDERBUFFER_HEIGHT :: 0x8D43;
GL_RENDERBUFFER_INTERNAL_FORMAT :: 0x8D44;
GL_STENCIL_INDEX1 :: 0x8D46;
GL_STENCIL_INDEX4 :: 0x8D47;
GL_STENCIL_INDEX8 :: 0x8D48;
GL_STENCIL_INDEX16 :: 0x8D49;
GL_RENDERBUFFER_RED_SIZE :: 0x8D50;
GL_RENDERBUFFER_GREEN_SIZE :: 0x8D51;
GL_RENDERBUFFER_BLUE_SIZE :: 0x8D52;
GL_RENDERBUFFER_ALPHA_SIZE :: 0x8D53;
GL_RENDERBUFFER_DEPTH_SIZE :: 0x8D54;
GL_RENDERBUFFER_STENCIL_SIZE :: 0x8D55;
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE :: 0x8D56;
GL_MAX_SAMPLES :: 0x8D57;
GL_FRAMEBUFFER_SRGB :: 0x8DB9;
GL_HALF_FLOAT :: 0x140B;
GL_MAP_READ_BIT :: 0x0001;
GL_MAP_WRITE_BIT :: 0x0002;
GL_MAP_INVALIDATE_RANGE_BIT :: 0x0004;
GL_MAP_INVALIDATE_BUFFER_BIT :: 0x0008;
GL_MAP_FLUSH_EXPLICIT_BIT :: 0x0010;
GL_MAP_UNSYNCHRONIZED_BIT :: 0x0020;
GL_COMPRESSED_RED_RGTC1 :: 0x8DBB;
GL_COMPRESSED_SIGNED_RED_RGTC1 :: 0x8DBC;
GL_COMPRESSED_RG_RGTC2 :: 0x8DBD;
GL_COMPRESSED_SIGNED_RG_RGTC2 :: 0x8DBE;
GL_RG :: 0x8227;
GL_RG_INTEGER :: 0x8228;
GL_R8 :: 0x8229;
GL_R16 :: 0x822A;
GL_RG8 :: 0x822B;
GL_RG16 :: 0x822C;
GL_R16F :: 0x822D;
GL_R32F :: 0x822E;
GL_RG16F :: 0x822F;
GL_RG32F :: 0x8230;
GL_R8I :: 0x8231;
GL_R8UI :: 0x8232;
GL_R16I :: 0x8233;
GL_R16UI :: 0x8234;
GL_R32I :: 0x8235;
GL_R32UI :: 0x8236;
GL_RG8I :: 0x8237;
GL_RG8UI :: 0x8238;
GL_RG16I :: 0x8239;
GL_RG16UI :: 0x823A;
GL_RG32I :: 0x823B;
GL_RG32UI :: 0x823C;
GL_VERTEX_ARRAY_BINDING :: 0x85B5;

glViewport: (GLint, GLint, GLsizei, GLsizei) void;
glBegin: (GLenum) void;
glEnd: () void;
glVertex2f: (GLfloat, GLfloat) void;
glVertex3f: (GLfloat, GLfloat, GLfloat) void;
glAlphaFunc: (GLenum, GLclampf) void;
glClearColor: (GLclampf, GLclampf, GLclampf, GLclampf) void;
glClearDepthf: (GLclampf) void;
glClipPlanef: (GLenum, *GLfloat) void;
glColor4f: (GLfloat, GLfloat, GLfloat, GLfloat) void;
glDepthRangef: (GLclampf, GLclampf) void;
glFogf: (GLenum, GLfloat) void;
glFogfv: (GLenum, *GLfloat) void;
glFrustumf: (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void;
glGetClipPlanef: (GLenum, GLfloat) void;
glGetFloatv: (GLenum, *GLfloat) void;
glGetLightfv: (GLenum, GLenum, *GLfloat) void;
glGetMaterialfv: (GLenum, GLenum, *GLfloat) void;
glGetTexEnvfv: (GLenum, GLenum, *GLfloat) void;
glGetTexParameterfv: (GLenum, GLenum, *GLfloat) void;
glLightModelf: (GLenum, GLfloat) void;
glLightModelfv: (GLenum, *GLfloat) void;
glLightf: (GLenum, GLenum, GLfloat) void;
glLightfv: (GLenum, GLenum, *GLfloat) void;
glLineWidth: (GLfloat) void;
glLoadMatrixf: (*GLfloat) void;
glMaterialf: (GLenum, GLenum, GLfloat) void;
glMaterialfv: (GLenum, GLenum, *GLfloat) void;
glMultMatrixf: (*GLfloat) void;
glMultiTexCoord4f: (GLenum, GLfloat, GLfloat, GLfloat, GLfloat) void;
glNormal3f: (GLfloat, GLfloat, GLfloat) void;
glOrthof: (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat) void;
glPointParameterf: (GLenum, GLfloat) void;
glPointParameterfv: (GLenum, *GLfloat) void;
glPointSize: (GLfloat) void;
glPolygonOffset: (GLfloat, GLfloat) void;
glRotatef: (GLfloat, GLfloat, GLfloat, GLfloat) void;
glScalef: (GLfloat, GLfloat, GLfloat) void;
glTexEnvf: (GLenum, GLenum, GLfloat) void;
glTexEnvfv: (GLenum, GLenum, *GLfloat) void;
glTexParameterf: (GLenum, GLenum, GLfloat) void;
glTexParameterfv: (GLenum, GLenum, *GLfloat) void;
glTranslatef: (GLfloat, GLfloat, GLfloat) void;
glActiveTexture: (GLenum) void;
glAlphaFuncx: (GLenum, GLclampx) void;
glBindBuffer: (GLenum, GLuint) void;
glBindTexture: (GLenum, GLuint) void;
glBlendFunc: (GLenum, GLenum) void;
glBufferData: (GLenum, GLsizeiptr, *GLvoid, GLenum) void;
glBufferSubData: (GLenum, GLintptr, GLsizeiptr, *GLvoid) void;
glClear: (GLbitfield) void;
glClearColorx: (GLclampx, GLclampx, GLclampx, GLclampx) void;
glClearDepthx: (GLclampx) void;
glClearStencil: (GLint) void;
glClientActiveTexture: (GLenum) void;
glClipPlanex: (GLenum, *GLfixed) void;
glColor4ub: (GLubyte, GLubyte, GLubyte, GLubyte) void;
glColor4x: (GLfixed, GLfixed, GLfixed, GLfixed) void;
glColorMask: (GLboolean, GLboolean, GLboolean, GLboolean) void;
glColorPointer: (GLint, GLenum, GLsizei, *GLvoid) void;
glCompressedTexImage2D: (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, *GLvoid) void;
glCompressedTexSubImage2D: (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, *GLvoid) void;
glCopyTexImage2D: (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint) void;
glCopyTexSubImage2D: (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void;
glCullFace: (GLenum) void;
glDeleteBuffers: (GLsizei, *GLuint) void;
glDeleteTextures: (GLsizei, *GLuint) void;
glDepthFunc: (GLenum) void;
glDepthMask: (GLboolean) void;
glDepthRangex: (GLclampx, GLclampx) void;
glDisable: (GLenum) void;
glDisableClientState: (GLenum) void;
glDrawArrays: (GLenum, GLint, GLsizei) void;
glDrawElements: (GLenum, GLsizei, GLenum, *GLvoid) void;
glEnable: (GLenum) void;
glEnableClientState: (GLenum) void;
glFinish: () void;
glFlush: () void;
glFogx: (GLenum, GLfixed) void;
glFogxv: (GLenum, *GLfixed) void;
glFrontFace: (GLenum) void;
glFrustumx: (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) void;
glGetBooleanv: (GLenum, *GLboolean) void;
glGetBufferParameteriv: (GLenum, GLenum, *GLint) void;
glGetClipPlanex: (GLenum, GLfixed) void;
glGenBuffers: (GLsizei, *GLuint) void;
glGenTextures: (GLsizei, *GLuint) void;
glGetError: () GLenum;
glGetFixedv: (GLenum, *GLfixed) void;
glGetIntegerv: (GLenum, *GLint) void;
glGetLightxv: (GLenum, GLenum, *GLfixed) void;
glGetMaterialxv: (GLenum, GLenum, *GLfixed) void;
glGetPointerv: (GLenum, **void) void;
glGetString: (GLenum) *u8;
glGetTexEnviv: (GLenum, GLenum, *GLint) void;
glGetTexEnvxv: (GLenum, GLenum, *GLfixed) void;
glGetTexParameteriv: (GLenum, GLenum, *GLint) void;
glGetTexParameterxv: (GLenum, GLenum, *GLfixed) void;
glHint: (GLenum, GLenum) void;
glIsBuffer: (GLuint) GLboolean;
glIsEnabled: (GLenum) GLboolean;
glIsTexture: (GLuint) GLboolean;
glLightModelx: (GLenum, GLfixed) void;
glLightModelxv: (GLenum, *GLfixed) void;
glLightx: (GLenum, GLenum, GLfixed) void;
glLightxv: (GLenum, GLenum, *GLfixed) void;
glLineWidthx: (GLfixed) void;
glLoadIdentity: () void;
glLoadMatrixx: (*GLfixed) void;
glLogicOp: (GLenum) void;
glMaterialx: (GLenum, GLenum, GLfixed) void;
glMaterialxv: (GLenum, GLenum, *GLfixed) void;
glMatrixMode: (GLenum) void;
glMultMatrixx: (*GLfixed) void;
glMultiTexCoord4x: (GLenum, GLfixed, GLfixed, GLfixed, GLfixed) void;
glNormal3x: (GLfixed, GLfixed, GLfixed) void;
glNormalPointer: (GLenum, GLsizei, *GLvoid) void;
glOrthox: (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed) void;
glPixelStorei: (GLenum, GLint) void;
glPointParameterx: (GLenum, GLfixed) void;
glPointParameterxv: (GLenum, *GLfixed) void;
glPointSizex: (GLfixed) void;
glPolygonOffsetx: (GLfixed, GLfixed) void;
glPopMatrix: () void;
glPushMatrix: () void;
glReadPixels: (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) void;
glRotatex: (GLfixed, GLfixed, GLfixed, GLfixed) void;
glSampleCoverage: (GLclampf, GLboolean) void;
glSampleCoveragex: (GLclampx, GLboolean) void;
glScalex: (GLfixed, GLfixed, GLfixed) void;
glScissor: (GLint, GLint, GLsizei, GLsizei) void;
glShadeModel: (GLenum) void;
glStencilFunc: (GLenum, GLint, GLuint) void;
glStencilMask: (GLuint) void;
glStencilOp: (GLenum, GLenum, GLenum) void;
glTexCoordPointer: (GLint, GLenum, GLsizei, *GLvoid) void;
glTexEnvi: (GLenum, GLenum, GLint) void;
glTexEnvx: (GLenum, GLenum, GLfixed) void;
glTexEnviv: (GLenum, GLenum, *GLint) void;
glTexEnvxv: (GLenum, GLenum, *GLfixed) void;
glTexImage2D: (GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, *GLvoid) void;
glTexParameteri: (GLenum, GLenum, GLint) void;
glTexParameterx: (GLenum, GLenum, GLfixed) void;
glTexParameteriv: (GLenum, GLenum, *GLint) void;
glTexParameterxv: (GLenum, GLenum, *GLfixed) void;
glTexSubImage2D: (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, *GLvoid) void;
glTranslatex: (GLfixed, GLfixed, GLfixed) void;
glVertexPointer: (GLint, GLenum, GLsizei, *GLvoid) void;
glPolygonMode: (GLenum, GLenum) void;
glTexImage1D: (GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, *void) void;
glDrawBuffer: (GLenum) void;
glClearDepth: (GLdouble) void;
glPixelStoref: (GLenum, GLfloat) void;
glReadBuffer: (GLenum) void;
glGetDoublev: (GLenum, *GLdouble) void;
glGetTexImage: (GLenum, GLint, GLenum, GLenum, *void) void;
glGetTexLevelParameterfv: (GLenum, GLint, GLenum, *GLfloat) void;
glGetTexLevelParameteriv: (GLenum, GLint, GLenum, *GLint) void;
glDepthRange: (GLdouble, GLdouble) void;
glCopyTexImage1D: (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint) void;
glCopyTexSubImage1D: (GLenum, GLint, GLint, GLint, GLint, GLsizei) void;
glTexSubImage1D: (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, *void) void;
glDrawRangeElements: (GLenum, GLuint, GLuint, GLsizei, GLenum, *void) void;
glTexImage3D: (GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, *void) void;
glTexSubImage3D: (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, *void) void;
glCopyTexSubImage3D: (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei) void;
glCompressedTexImage3D: (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, *void) void;
glCompressedTexImage1D: (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, *void) void;
glCompressedTexSubImage3D: (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, *void) void;
glCompressedTexSubImage1D: (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, *void) void;
glGetCompressedTexImage: (GLenum, GLint, *void) void;
glBlendFuncSeparate: (GLenum, GLenum, GLenum, GLenum) void;
glMultiDrawArrays: (GLenum, *GLint, *GLsizei, GLsizei) void;
glMultiDrawElements: (GLenum, *GLsizei, GLenum, *void, GLsizei) void;
glPointParameteri: (GLenum, GLint) void;
glPointParameteriv: (GLenum, *GLint) void;
glBlendColor: (GLfloat, GLfloat, GLfloat, GLfloat) void;
glBlendEquation: (GLenum) void;
glGenQueries: (GLsizei, *GLuint) void;
glDeleteQueries: (GLsizei, *GLuint) void;
glIsQuery: (GLuint) GLboolean;
glBeginQuery: (GLenum, GLuint) void;
glEndQuery: (GLenum) void;
glGetQueryiv: (GLenum, GLenum, *GLint) void;
glGetQueryObjectiv: (GLuint, GLenum, *GLint) void;
glGetQueryObjectuiv: (GLuint, GLenum, *GLuint) void;
glGetBufferSubData: (GLenum, GLintptr, GLsizeiptr, *void) void;
glMapBuffer: (GLenum, GLenum) *void;
glUnmapBuffer: (GLenum) GLboolean;
glGetBufferPointerv: (GLenum, GLenum, **void) void;
glBlendEquationSeparate: (GLenum, GLenum) void;
glDrawBuffers: (GLsizei, *GLenum) void;
glStencilOpSeparate: (GLenum, GLenum, GLenum, GLenum) void;
glStencilFuncSeparate: (GLenum, GLenum, GLint, GLuint) void;
glStencilMaskSeparate: (GLenum, GLuint) void;
glAttachShader: (GLuint, GLuint) void;
glBindAttribLocation: (GLuint, GLuint, *u8) void;
glCompileShader: (GLuint) void;
glCreateProgram: () GLuint;
glCreateShader: (GLenum) GLuint;
glDeleteProgram: (GLuint) void;
glDeleteShader: (GLuint) void;
glDetachShader: (GLuint, GLuint) void;
glDisableVertexAttribArray: (GLuint) void;
glEnableVertexAttribArray: (GLuint) void;
glGetActiveAttrib: (GLuint, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *u8) void;
glGetActiveUniform: (GLuint, GLuint, GLsizei, *GLsizei, *GLint, *GLenum, *u8) void;
glGetAttachedShaders: (GLuint, GLsizei, *GLsizei, *GLuint) void;
glGetAttribLocation: (GLuint, *u8) GLint;
glGetProgramiv: (GLuint, GLenum, *GLint) void;
glGetProgramInfoLog: (GLuint, GLsizei, *GLsizei, *u8) void;
glGetShaderiv: (GLuint, GLenum, *GLint) void;
glGetShaderInfoLog: (GLuint, GLsizei, *GLsizei, *u8) void;
glGetShaderSource: (GLuint, GLsizei, *GLsizei, *u8) void;
glGetUniformLocation: (GLuint, *u8) GLint;
glGetUniformfv: (GLuint, GLint, *GLfloat) void;
glGetUniformiv: (GLuint, GLint, *GLint) void;
glGetVertexAttribdv: (GLuint, GLenum, *GLdouble) void;
glGetVertexAttribfv: (GLuint, GLenum, *GLfloat) void;
glGetVertexAttribiv: (GLuint, GLenum, *GLint) void;
glGetVertexAttribPointerv: (GLuint, GLenum, **void) void;
glIsProgram: (GLuint) GLboolean;
glIsShader: (GLuint) GLboolean;
glLinkProgram: (GLuint) void;
glShaderSource: (GLuint, GLsizei, *str, *GLint) void;
glUseProgram: (GLuint) void;
glUniform1f: (GLint, GLfloat) void;
glUniform2f: (GLint, GLfloat, GLfloat) void;
glUniform3f: (GLint, GLfloat, GLfloat, GLfloat) void;
glUniform4f: (GLint, GLfloat, GLfloat, GLfloat, GLfloat) void;
glUniform1i: (GLint, GLint) void;
glUniform2i: (GLint, GLint, GLint) void;
glUniform3i: (GLint, GLint, GLint, GLint) void;
glUniform4i: (GLint, GLint, GLint, GLint, GLint) void;
glUniform1fv: (GLint, GLsizei, *GLfloat) void;
glUniform2fv: (GLint, GLsizei, *GLfloat) void;
glUniform3fv: (GLint, GLsizei, *GLfloat) void;
glUniform4fv: (GLint, GLsizei, *GLfloat) void;
glUniform1iv: (GLint, GLsizei, *GLint) void;
glUniform2iv: (GLint, GLsizei, *GLint) void;
glUniform3iv: (GLint, GLsizei, *GLint) void;
glUniform4iv: (GLint, GLsizei, *GLint) void;
glUniformMatrix2fv: (GLint, GLsizei, GLboolean, *GLfloat) void;
glUniformMatrix3fv: (GLint, GLsizei, GLboolean, *GLfloat) void;
glUniformMatrix4fv: (GLint, GLsizei, GLboolean, *GLfloat) void;
glValidateProgram: (GLuint) void;
glVertexAttrib1d: (GLuint, GLdouble) void;
glVertexAttrib1dv: (GLuint, *GLdouble) void;
glVertexAttrib1f: (GLuint, GLfloat) void;
glVertexAttrib1fv: (GLuint, *GLfloat) void;
glVertexAttrib1s: (GLuint, GLshort) void;
glVertexAttrib1sv: (GLuint, *GLshort) void;
glVertexAttrib2d: (GLuint, GLdouble, GLdouble) void;
glVertexAttrib2dv: (GLuint, *GLdouble) void;
glVertexAttrib2f: (GLuint, GLfloat, GLfloat) void;
glVertexAttrib2fv: (GLuint, *GLfloat) void;
glVertexAttrib2s: (GLuint, GLshort, GLshort) void;
glVertexAttrib2sv: (GLuint, *GLshort) void;
glVertexAttrib3d: (GLuint, GLdouble, GLdouble, GLdouble) void;
glVertexAttrib3dv: (GLuint, *GLdouble) void;
glVertexAttrib3f: (GLuint, GLfloat, GLfloat, GLfloat) void;
glVertexAttrib3fv: (GLuint, *GLfloat) void;
glVertexAttrib3s: (GLuint, GLshort, GLshort, GLshort) void;
glVertexAttrib3sv: (GLuint, *GLshort) void;
glVertexAttrib4Nbv: (GLuint, *GLbyte) void;
glVertexAttrib4Niv: (GLuint, *GLint) void;
glVertexAttrib4Nsv: (GLuint, *GLshort) void;
glVertexAttrib4Nub: (GLuint, GLubyte, GLubyte, GLubyte, GLubyte) void;
glVertexAttrib4Nubv: (GLuint, *GLubyte) void;
glVertexAttrib4Nuiv: (GLuint, *GLuint) void;
glVertexAttrib4Nusv: (GLuint, *GLushort) void;
glVertexAttrib4bv: (GLuint, *GLbyte) void;
glVertexAttrib4d: (GLuint, GLdouble, GLdouble, GLdouble, GLdouble) void;
glVertexAttrib4dv: (GLuint, *GLdouble) void;
glVertexAttrib4f: (GLuint, GLfloat, GLfloat, GLfloat, GLfloat) void;
glVertexAttrib4fv: (GLuint, *GLfloat) void;
glVertexAttrib4iv: (GLuint, *GLint) void;
glVertexAttrib4s: (GLuint, GLshort, GLshort, GLshort, GLshort) void;
glVertexAttrib4sv: (GLuint, *GLshort) void;
glVertexAttrib4ubv: (GLuint, *GLubyte) void;
glVertexAttrib4uiv: (GLuint, *GLuint) void;
glVertexAttrib4usv: (GLuint, *GLushort) void;
glVertexAttribPointer: (GLuint, GLint, GLenum, GLboolean, GLsizei, *void) void;
glUniformMatrix2x3fv: (GLint, GLsizei, GLboolean, *GLfloat) void;
glUniformMatrix3x2fv: (GLint, GLsizei, GLboolean, *GLfloat) void;
glUniformMatrix2x4fv: (GLint, GLsizei, GLboolean, *GLfloat) void;
glUniformMatrix4x2fv: (GLint, GLsizei, GLboolean, *GLfloat) void;
glUniformMatrix3x4fv: (GLint, GLsizei, GLboolean, *GLfloat) void;
glUniformMatrix4x3fv: (GLint, GLsizei, GLboolean, *GLfloat) void;
glColorMaski: (GLuint, GLboolean, GLboolean, GLboolean, GLboolean) void;
glGetBooleani_v: (GLenum, GLuint, *GLboolean) void;
glGetIntegeri_v: (GLenum, GLuint, *GLint) void;
glEnablei: (GLenum, GLuint) void;
glDisablei: (GLenum, GLuint) void;
glIsEnabledi: (GLenum, GLuint) GLboolean;
glBeginTransformFeedback: (GLenum) void;
glEndTransformFeedback: () void;
glBindBufferRange: (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr) void;
glBindBufferBase: (GLenum, GLuint, GLuint) void;
glTransformFeedbackVaryings: (GLuint, GLsizei, *str, GLenum) void;
glGetTransformFeedbackVarying: (GLuint, GLuint, GLsizei, *GLsizei, *GLsizei, *GLenum, *u8) void;
glClampColor: (GLenum, GLenum) void;
glBeginConditionalRender: (GLuint, GLenum) void;
glEndConditionalRender: () void;
glVertexAttribIPointer: (GLuint, GLint, GLenum, GLsizei, *void) void;
glGetVertexAttribIiv: (GLuint, GLenum, *GLint) void;
glGetVertexAttribIuiv: (GLuint, GLenum, *GLuint) void;
glVertexAttribI1i: (GLuint, GLint) void;
glVertexAttribI2i: (GLuint, GLint, GLint) void;
glVertexAttribI3i: (GLuint, GLint, GLint, GLint) void;
glVertexAttribI4i: (GLuint, GLint, GLint, GLint, GLint) void;
glVertexAttribI1ui: (GLuint, GLuint) void;
glVertexAttribI2ui: (GLuint, GLuint, GLuint) void;
glVertexAttribI3ui: (GLuint, GLuint, GLuint, GLuint) void;
glVertexAttribI4ui: (GLuint, GLuint, GLuint, GLuint, GLuint) void;
glVertexAttribI1iv: (GLuint, *GLint) void;
glVertexAttribI2iv: (GLuint, *GLint) void;
glVertexAttribI3iv: (GLuint, *GLint) void;
glVertexAttribI4iv: (GLuint, *GLint) void;
glVertexAttribI1uiv: (GLuint, *GLuint) void;
glVertexAttribI2uiv: (GLuint, *GLuint) void;
glVertexAttribI3uiv: (GLuint, *GLuint) void;
glVertexAttribI4uiv: (GLuint, *GLuint) void;
glVertexAttribI4bv: (GLuint, *GLbyte) void;
glVertexAttribI4sv: (GLuint, *GLshort) void;
glVertexAttribI4ubv: (GLuint, *GLubyte) void;
glVertexAttribI4usv: (GLuint, *GLushort) void;
glGetUniformuiv: (GLuint, GLint, *GLuint) void;
glBindFragDataLocation: (GLuint, GLuint, *u8) void;
glGetFragDataLocation: (GLuint, *u8) GLint;
glUniform1ui: (GLint, GLuint) void;
glUniform2ui: (GLint, GLuint, GLuint) void;
glUniform3ui: (GLint, GLuint, GLuint, GLuint) void;
glUniform4ui: (GLint, GLuint, GLuint, GLuint, GLuint) void;
glUniform1uiv: (GLint, GLsizei, *GLuint) void;
glUniform2uiv: (GLint, GLsizei, *GLuint) void;
glUniform3uiv: (GLint, GLsizei, *GLuint) void;
glUniform4uiv: (GLint, GLsizei, *GLuint) void;
glTexParameterIiv: (GLenum, GLenum, *GLint) void;
glTexParameterIuiv: (GLenum, GLenum, *GLuint) void;
glGetTexParameterIiv: (GLenum, GLenum, *GLint) void;
glGetTexParameterIuiv: (GLenum, GLenum, *GLuint) void;
glClearBufferiv: (GLenum, GLint, *GLint) void;
glClearBufferuiv: (GLenum, GLint, *GLuint) void;
glClearBufferfv: (GLenum, GLint, *GLfloat) void;
glClearBufferfi: (GLenum, GLint, GLfloat, GLint) void;
glGetStringi: (GLenum, GLuint) *u8;
glIsRenderbuffer: (GLuint) GLboolean;
glBindRenderbuffer: (GLenum, GLuint) void;
glDeleteRenderbuffers: (GLsizei, *GLuint) void;
glGenRenderbuffers: (GLsizei, *GLuint) void;
glRenderbufferStorage: (GLenum, GLenum, GLsizei, GLsizei) void;
glGetRenderbufferParameteriv: (GLenum, GLenum, *GLint) void;
glIsFramebuffer: (GLuint) GLboolean;
glBindFramebuffer: (GLenum, GLuint) void;
glDeleteFramebuffers: (GLsizei, *GLuint) void;
glGenFramebuffers: (GLsizei, *GLuint) void;
glCheckFramebufferStatus: (GLenum) GLenum;
glFramebufferTexture1D: (GLenum, GLenum, GLenum, GLuint, GLint) void;
glFramebufferTexture2D: (GLenum, GLenum, GLenum, GLuint, GLint) void;
glFramebufferTexture3D: (GLenum, GLenum, GLenum, GLuint, GLint, GLint) void;
glFramebufferRenderbuffer: (GLenum, GLenum, GLenum, GLuint) void;
glGetFramebufferAttachmentParameteriv: (GLenum, GLenum, GLenum, *GLint) void;
glGenerateMipmap: (GLenum) void;
glBlitFramebuffer: (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum) void;
glRenderbufferStorageMultisample: (GLenum, GLsizei, GLenum, GLsizei, GLsizei) void;
glFramebufferTextureLayer: (GLenum, GLenum, GLuint, GLint, GLint) void;
glMapBufferRange: (GLenum, GLintptr, GLsizeiptr, GLbitfield) *void;
glFlushMappedBufferRange: (GLenum, GLintptr, GLsizeiptr) void;
glBindVertexArray: (GLuint) void;
glDeleteVertexArrays: (GLsizei, *GLuint) void;
glGenVertexArrays: (GLsizei, *GLuint) void;
glIsVertexArray: (GLuint) GLboolean;
glDrawArraysInstanced: (GLenum, GLint, GLsizei, GLsizei) void;
glDrawElementsInstanced: (GLenum, GLsizei, GLenum, *void, GLsizei) void;
glTexBuffer: (GLenum, GLenum, GLuint) void;
glPrimitiveRestartIndex: (GLuint) void;
glCopyBufferSubData: (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr) void;
glGetUniformIndices: (GLuint, GLsizei, *str, *GLuint) void;
glGetActiveUniformsiv: (GLuint, GLsizei, *GLuint, GLenum, *GLint) void;
glGetActiveUniformName: (GLuint, GLuint, GLsizei, *GLsizei, *u8) void;
glGetUniformBlockIndex: (GLuint, *u8) GLuint;
glGetActiveUniformBlockiv: (GLuint, GLuint, GLenum, *GLint) void;
glGetActiveUniformBlockName: (GLuint, GLuint, GLsizei, *GLsizei, *u8) void;
glUniformBlockBinding: (GLuint, GLuint, GLuint) void;
glMinSampleShading: (GLfloat) void;
glBlendEquationi: (GLuint, GLenum) void;
glBlendEquationSeparatei: (GLuint, GLenum, GLenum) void;
glBlendFunci: (GLuint, GLenum, GLenum) void;
glBlendFuncSeparatei: (GLuint, GLenum, GLenum, GLenum, GLenum) void;
glDrawArraysIndirect: (GLenum, *void) void;
glDrawElementsIndirect: (GLenum, GLenum, *void) void;
glUniform1d: (GLint, GLdouble) void;
glUniform2d: (GLint, GLdouble, GLdouble) void;
glUniform3d: (GLint, GLdouble, GLdouble, GLdouble) void;
glUniform4d: (GLint, GLdouble, GLdouble, GLdouble, GLdouble) void;
glUniform1dv: (GLint, GLsizei, *GLdouble) void;
glUniform2dv: (GLint, GLsizei, *GLdouble) void;
glUniform3dv: (GLint, GLsizei, *GLdouble) void;
glUniform4dv: (GLint, GLsizei, *GLdouble) void;
glUniformMatrix2dv: (GLint, GLsizei, GLboolean, *GLdouble) void;
glUniformMatrix3dv: (GLint, GLsizei, GLboolean, *GLdouble) void;
glUniformMatrix4dv: (GLint, GLsizei, GLboolean, *GLdouble) void;
glUniformMatrix2x3dv: (GLint, GLsizei, GLboolean, *GLdouble) void;
glUniformMatrix2x4dv: (GLint, GLsizei, GLboolean, *GLdouble) void;
glUniformMatrix3x2dv: (GLint, GLsizei, GLboolean, *GLdouble) void;
glUniformMatrix3x4dv: (GLint, GLsizei, GLboolean, *GLdouble) void;
glUniformMatrix4x2dv: (GLint, GLsizei, GLboolean, *GLdouble) void;
glUniformMatrix4x3dv: (GLint, GLsizei, GLboolean, *GLdouble) void;
glGetUniformdv: (GLuint, GLint, *GLdouble) void;
glGetSubroutineUniformLocation: (GLuint, GLenum, *u8) GLint;
glGetSubroutineIndex: (GLuint, GLenum, *u8) GLuint;
glGetActiveSubroutineUniformiv: (GLuint, GLenum, GLuint, GLenum, *GLint) void;
glGetActiveSubroutineUniformName: (GLuint, GLenum, GLuint, GLsizei, *GLsizei, *u8) void;
glGetActiveSubroutineName: (GLuint, GLenum, GLuint, GLsizei, *GLsizei, *u8) void;
glUniformSubroutinesuiv: (GLenum, GLsizei, *GLuint) void;
glGetUniformSubroutineuiv: (GLenum, GLint, *GLuint) void;
glGetProgramStageiv: (GLuint, GLenum, GLenum, *GLint) void;
glPatchParameteri: (GLenum, GLint) void;
glPatchParameterfv: (GLenum, *GLfloat) void;
glBindTransformFeedback: (GLenum, GLuint) void;
glDeleteTransformFeedbacks: (GLsizei, *GLuint) void;
glGenTransformFeedbacks: (GLsizei, *GLuint) void;
glIsTransformFeedback: (GLuint) GLboolean;
glPauseTransformFeedback: () void;
glResumeTransformFeedback: () void;
glDrawTransformFeedback: (GLenum, GLuint) void;
glDrawTransformFeedbackStream: (GLenum, GLuint, GLuint) void;
glBeginQueryIndexed: (GLenum, GLuint, GLuint) void;
glEndQueryIndexed: (GLenum, GLuint) void;
glGetQueryIndexediv: (GLenum, GLuint, GLenum, *GLint) void;

extern func wglGetProcAddress(name: *u8) *void;
extern func LoadLibraryA(module: *u8) *void;
extern func GetProcAddress(module: *void, func_name: *u8) *void;

opengl_module: *void;

func get_opengl_fn(name: *u8) *void {
	p := wglGetProcAddress(name);
	if (!p) {
		p = GetProcAddress(opengl_module, name);
	}

	return p;	
}

func opengl_init() {
	opengl_module = LoadLibraryA("opengl32.dll".data);

	glViewport = get_opengl_fn("glViewport".data);
	glBegin = get_opengl_fn("glBegin".data);
	glEnd = get_opengl_fn("glEnd".data);
	glVertex2f = get_opengl_fn("glVertex2f".data);
	glVertex3f = get_opengl_fn("glVertex3f".data);
	glAlphaFunc = get_opengl_fn("glAlphaFunc".data);
	glClearColor = get_opengl_fn("glClearColor".data);
	glClearDepthf = get_opengl_fn("glClearDepthf".data);
	glClipPlanef = get_opengl_fn("glClipPlanef".data);
	glColor4f = get_opengl_fn("glColor4f".data);
	glDepthRangef = get_opengl_fn("glDepthRangef".data);
	glFogf = get_opengl_fn("glFogf".data);
	glFogfv = get_opengl_fn("glFogfv".data);
	glFrustumf = get_opengl_fn("glFrustumf".data);
	glGetClipPlanef = get_opengl_fn("glGetClipPlanef".data);
	glGetFloatv = get_opengl_fn("glGetFloatv".data);
	glGetLightfv = get_opengl_fn("glGetLightfv".data);
	glGetMaterialfv = get_opengl_fn("glGetMaterialfv".data);
	glGetTexEnvfv = get_opengl_fn("glGetTexEnvfv".data);
	glGetTexParameterfv = get_opengl_fn("glGetTexParameterfv".data);
	glLightModelf = get_opengl_fn("glLightModelf".data);
	glLightModelfv = get_opengl_fn("glLightModelfv".data);
	glLightf = get_opengl_fn("glLightf".data);
	glLightfv = get_opengl_fn("glLightfv".data);
	glLineWidth = get_opengl_fn("glLineWidth".data);
	glLoadMatrixf = get_opengl_fn("glLoadMatrixf".data);
	glMaterialf = get_opengl_fn("glMaterialf".data);
	glMaterialfv = get_opengl_fn("glMaterialfv".data);
	glMultMatrixf = get_opengl_fn("glMultMatrixf".data);
	glMultiTexCoord4f = get_opengl_fn("glMultiTexCoord4f".data);
	glNormal3f = get_opengl_fn("glNormal3f".data);
	glOrthof = get_opengl_fn("glOrthof".data);
	glPointParameterf = get_opengl_fn("glPointParameterf".data);
	glPointParameterfv = get_opengl_fn("glPointParameterfv".data);
	glPointSize = get_opengl_fn("glPointSize".data);
	glPolygonOffset = get_opengl_fn("glPolygonOffset".data);
	glRotatef = get_opengl_fn("glRotatef".data);
	glScalef = get_opengl_fn("glScalef".data);
	glTexEnvf = get_opengl_fn("glTexEnvf".data);
	glTexEnvfv = get_opengl_fn("glTexEnvfv".data);
	glTexParameterf = get_opengl_fn("glTexParameterf".data);
	glTexParameterfv = get_opengl_fn("glTexParameterfv".data);
	glTranslatef = get_opengl_fn("glTranslatef".data);
	glActiveTexture = get_opengl_fn("glActiveTexture".data);
	glAlphaFuncx = get_opengl_fn("glAlphaFuncx".data);
	glBindBuffer = get_opengl_fn("glBindBuffer".data);
	glBindTexture = get_opengl_fn("glBindTexture".data);
	glBlendFunc = get_opengl_fn("glBlendFunc".data);
	glBufferData = get_opengl_fn("glBufferData".data);
	glBufferSubData = get_opengl_fn("glBufferSubData".data);
	glClear = get_opengl_fn("glClear".data);
	glClearColorx = get_opengl_fn("glClearColorx".data);
	glClearDepthx = get_opengl_fn("glClearDepthx".data);
	glClearStencil = get_opengl_fn("glClearStencil".data);
	glClientActiveTexture = get_opengl_fn("glClientActiveTexture".data);
	glClipPlanex = get_opengl_fn("glClipPlanex".data);
	glColor4ub = get_opengl_fn("glColor4ub".data);
	glColor4x = get_opengl_fn("glColor4x".data);
	glColorMask = get_opengl_fn("glColorMask".data);
	glColorPointer = get_opengl_fn("glColorPointer".data);
	glCompressedTexImage2D = get_opengl_fn("glCompressedTexImage2D".data);
	glCompressedTexSubImage2D = get_opengl_fn("glCompressedTexSubImage2D".data);
	glCopyTexImage2D = get_opengl_fn("glCopyTexImage2D".data);
	glCopyTexSubImage2D = get_opengl_fn("glCopyTexSubImage2D".data);
	glCullFace = get_opengl_fn("glCullFace".data);
	glDeleteBuffers = get_opengl_fn("glDeleteBuffers".data);
	glDeleteTextures = get_opengl_fn("glDeleteTextures".data);
	glDepthFunc = get_opengl_fn("glDepthFunc".data);
	glDepthMask = get_opengl_fn("glDepthMask".data);
	glDepthRangex = get_opengl_fn("glDepthRangex".data);
	glDisable = get_opengl_fn("glDisable".data);
	glDisableClientState = get_opengl_fn("glDisableClientState".data);
	glDrawArrays = get_opengl_fn("glDrawArrays".data);
	glDrawElements = get_opengl_fn("glDrawElements".data);
	glEnable = get_opengl_fn("glEnable".data);
	glEnableClientState = get_opengl_fn("glEnableClientState".data);
	glFinish = get_opengl_fn("glFinish".data);
	glFlush = get_opengl_fn("glFlush".data);
	glFogx = get_opengl_fn("glFogx".data);
	glFogxv = get_opengl_fn("glFogxv".data);
	glFrontFace = get_opengl_fn("glFrontFace".data);
	glFrustumx = get_opengl_fn("glFrustumx".data);
	glGetBooleanv = get_opengl_fn("glGetBooleanv".data);
	glGetBufferParameteriv = get_opengl_fn("glGetBufferParameteriv".data);
	glGetClipPlanex = get_opengl_fn("glGetClipPlanex".data);
	glGenBuffers = get_opengl_fn("glGenBuffers".data);
	glGenTextures = get_opengl_fn("glGenTextures".data);
	glGetError = get_opengl_fn("glGetError".data);
	glGetFixedv = get_opengl_fn("glGetFixedv".data);
	glGetIntegerv = get_opengl_fn("glGetIntegerv".data);
	glGetLightxv = get_opengl_fn("glGetLightxv".data);
	glGetMaterialxv = get_opengl_fn("glGetMaterialxv".data);
	glGetPointerv = get_opengl_fn("glGetPointerv".data);
	glGetString = get_opengl_fn("glGetString".data);
	glGetTexEnviv = get_opengl_fn("glGetTexEnviv".data);
	glGetTexEnvxv = get_opengl_fn("glGetTexEnvxv".data);
	glGetTexParameteriv = get_opengl_fn("glGetTexParameteriv".data);
	glGetTexParameterxv = get_opengl_fn("glGetTexParameterxv".data);
	glHint = get_opengl_fn("glHint".data);
	glIsBuffer = get_opengl_fn("glIsBuffer".data);
	glIsEnabled = get_opengl_fn("glIsEnabled".data);
	glIsTexture = get_opengl_fn("glIsTexture".data);
	glLightModelx = get_opengl_fn("glLightModelx".data);
	glLightModelxv = get_opengl_fn("glLightModelxv".data);
	glLightx = get_opengl_fn("glLightx".data);
	glLightxv = get_opengl_fn("glLightxv".data);
	glLineWidthx = get_opengl_fn("glLineWidthx".data);
	glLoadIdentity = get_opengl_fn("glLoadIdentity".data);
	glLoadMatrixx = get_opengl_fn("glLoadMatrixx".data);
	glLogicOp = get_opengl_fn("glLogicOp".data);
	glMaterialx = get_opengl_fn("glMaterialx".data);
	glMaterialxv = get_opengl_fn("glMaterialxv".data);
	glMatrixMode = get_opengl_fn("glMatrixMode".data);
	glMultMatrixx = get_opengl_fn("glMultMatrixx".data);
	glMultiTexCoord4x = get_opengl_fn("glMultiTexCoord4x".data);
	glNormal3x = get_opengl_fn("glNormal3x".data);
	glNormalPointer = get_opengl_fn("glNormalPointer".data);
	glOrthox = get_opengl_fn("glOrthox".data);
	glPixelStorei = get_opengl_fn("glPixelStorei".data);
	glPointParameterx = get_opengl_fn("glPointParameterx".data);
	glPointParameterxv = get_opengl_fn("glPointParameterxv".data);
	glPointSizex = get_opengl_fn("glPointSizex".data);
	glPolygonOffsetx = get_opengl_fn("glPolygonOffsetx".data);
	glPopMatrix = get_opengl_fn("glPopMatrix".data);
	glPushMatrix = get_opengl_fn("glPushMatrix".data);
	glReadPixels = get_opengl_fn("glReadPixels".data);
	glRotatex = get_opengl_fn("glRotatex".data);
	glSampleCoverage = get_opengl_fn("glSampleCoverage".data);
	glSampleCoveragex = get_opengl_fn("glSampleCoveragex".data);
	glScalex = get_opengl_fn("glScalex".data);
	glScissor = get_opengl_fn("glScissor".data);
	glShadeModel = get_opengl_fn("glShadeModel".data);
	glStencilFunc = get_opengl_fn("glStencilFunc".data);
	glStencilMask = get_opengl_fn("glStencilMask".data);
	glStencilOp = get_opengl_fn("glStencilOp".data);
	glTexCoordPointer = get_opengl_fn("glTexCoordPointer".data);
	glTexEnvi = get_opengl_fn("glTexEnvi".data);
	glTexEnvx = get_opengl_fn("glTexEnvx".data);
	glTexEnviv = get_opengl_fn("glTexEnviv".data);
	glTexEnvxv = get_opengl_fn("glTexEnvxv".data);
	glTexImage2D = get_opengl_fn("glTexImage2D".data);
	glTexParameteri = get_opengl_fn("glTexParameteri".data);
	glTexParameterx = get_opengl_fn("glTexParameterx".data);
	glTexParameteriv = get_opengl_fn("glTexParameteriv".data);
	glTexParameterxv = get_opengl_fn("glTexParameterxv".data);
	glTexSubImage2D = get_opengl_fn("glTexSubImage2D".data);
	glTranslatex = get_opengl_fn("glTranslatex".data);
	glVertexPointer = get_opengl_fn("glVertexPointer".data);
	glPolygonMode = get_opengl_fn("glPolygonMode".data);
	glTexImage1D = get_opengl_fn("glTexImage1D".data);
	glDrawBuffer = get_opengl_fn("glDrawBuffer".data);
	glClearDepth = get_opengl_fn("glClearDepth".data);
	glPixelStoref = get_opengl_fn("glPixelStoref".data);
	glReadBuffer = get_opengl_fn("glReadBuffer".data);
	glGetDoublev = get_opengl_fn("glGetDoublev".data);
	glGetTexImage = get_opengl_fn("glGetTexImage".data);
	glGetTexLevelParameterfv = get_opengl_fn("glGetTexLevelParameterfv".data);
	glGetTexLevelParameteriv = get_opengl_fn("glGetTexLevelParameteriv".data);
	glDepthRange = get_opengl_fn("glDepthRange".data);
	glCopyTexImage1D = get_opengl_fn("glCopyTexImage1D".data);
	glCopyTexSubImage1D = get_opengl_fn("glCopyTexSubImage1D".data);
	glTexSubImage1D = get_opengl_fn("glTexSubImage1D".data);
	glDrawRangeElements = get_opengl_fn("glDrawRangeElements".data);
	glTexImage3D = get_opengl_fn("glTexImage3D".data);
	glTexSubImage3D = get_opengl_fn("glTexSubImage3D".data);
	glCopyTexSubImage3D = get_opengl_fn("glCopyTexSubImage3D".data);
	glCompressedTexImage3D = get_opengl_fn("glCompressedTexImage3D".data);
	glCompressedTexImage1D = get_opengl_fn("glCompressedTexImage1D".data);
	glCompressedTexSubImage3D = get_opengl_fn("glCompressedTexSubImage3D".data);
	glCompressedTexSubImage1D = get_opengl_fn("glCompressedTexSubImage1D".data);
	glGetCompressedTexImage = get_opengl_fn("glGetCompressedTexImage".data);
	glBlendFuncSeparate = get_opengl_fn("glBlendFuncSeparate".data);
	glMultiDrawArrays = get_opengl_fn("glMultiDrawArrays".data);
	glMultiDrawElements = get_opengl_fn("glMultiDrawElements".data);
	glPointParameteri = get_opengl_fn("glPointParameteri".data);
	glPointParameteriv = get_opengl_fn("glPointParameteriv".data);
	glBlendColor = get_opengl_fn("glBlendColor".data);
	glBlendEquation = get_opengl_fn("glBlendEquation".data);
	glGenQueries = get_opengl_fn("glGenQueries".data);
	glDeleteQueries = get_opengl_fn("glDeleteQueries".data);
	glIsQuery = get_opengl_fn("glIsQuery".data);
	glBeginQuery = get_opengl_fn("glBeginQuery".data);
	glEndQuery = get_opengl_fn("glEndQuery".data);
	glGetQueryiv = get_opengl_fn("glGetQueryiv".data);
	glGetQueryObjectiv = get_opengl_fn("glGetQueryObjectiv".data);
	glGetQueryObjectuiv = get_opengl_fn("glGetQueryObjectuiv".data);
	glGetBufferSubData = get_opengl_fn("glGetBufferSubData".data);
	glMapBuffer = get_opengl_fn("glMapBuffer".data);
	glUnmapBuffer = get_opengl_fn("glUnmapBuffer".data);
	glGetBufferPointerv = get_opengl_fn("glGetBufferPointerv".data);
	glBlendEquationSeparate = get_opengl_fn("glBlendEquationSeparate".data);
	glDrawBuffers = get_opengl_fn("glDrawBuffers".data);
	glStencilOpSeparate = get_opengl_fn("glStencilOpSeparate".data);
	glStencilFuncSeparate = get_opengl_fn("glStencilFuncSeparate".data);
	glStencilMaskSeparate = get_opengl_fn("glStencilMaskSeparate".data);
	glAttachShader = get_opengl_fn("glAttachShader".data);
	glBindAttribLocation = get_opengl_fn("glBindAttribLocation".data);
	glCompileShader = get_opengl_fn("glCompileShader".data);
	glCreateProgram = get_opengl_fn("glCreateProgram".data);
	glCreateShader = get_opengl_fn("glCreateShader".data);
	glDeleteProgram = get_opengl_fn("glDeleteProgram".data);
	glDeleteShader = get_opengl_fn("glDeleteShader".data);
	glDetachShader = get_opengl_fn("glDetachShader".data);
	glDisableVertexAttribArray = get_opengl_fn("glDisableVertexAttribArray".data);
	glEnableVertexAttribArray = get_opengl_fn("glEnableVertexAttribArray".data);
	glGetActiveAttrib = get_opengl_fn("glGetActiveAttrib".data);
	glGetActiveUniform = get_opengl_fn("glGetActiveUniform".data);
	glGetAttachedShaders = get_opengl_fn("glGetAttachedShaders".data);
	glGetAttribLocation = get_opengl_fn("glGetAttribLocation".data);
	glGetProgramiv = get_opengl_fn("glGetProgramiv".data);
	glGetProgramInfoLog = get_opengl_fn("glGetProgramInfoLog".data);
	glGetShaderiv = get_opengl_fn("glGetShaderiv".data);
	glGetShaderInfoLog = get_opengl_fn("glGetShaderInfoLog".data);
	glGetShaderSource = get_opengl_fn("glGetShaderSource".data);
	glGetUniformLocation = get_opengl_fn("glGetUniformLocation".data);
	glGetUniformfv = get_opengl_fn("glGetUniformfv".data);
	glGetUniformiv = get_opengl_fn("glGetUniformiv".data);
	glGetVertexAttribdv = get_opengl_fn("glGetVertexAttribdv".data);
	glGetVertexAttribfv = get_opengl_fn("glGetVertexAttribfv".data);
	glGetVertexAttribiv = get_opengl_fn("glGetVertexAttribiv".data);
	glGetVertexAttribPointerv = get_opengl_fn("glGetVertexAttribPointerv".data);
	glIsProgram = get_opengl_fn("glIsProgram".data);
	glIsShader = get_opengl_fn("glIsShader".data);
	glLinkProgram = get_opengl_fn("glLinkProgram".data);
	glShaderSource = get_opengl_fn("glShaderSource".data);
	glUseProgram = get_opengl_fn("glUseProgram".data);
	glUniform1f = get_opengl_fn("glUniform1f".data);
	glUniform2f = get_opengl_fn("glUniform2f".data);
	glUniform3f = get_opengl_fn("glUniform3f".data);
	glUniform4f = get_opengl_fn("glUniform4f".data);
	glUniform1i = get_opengl_fn("glUniform1i".data);
	glUniform2i = get_opengl_fn("glUniform2i".data);
	glUniform3i = get_opengl_fn("glUniform3i".data);
	glUniform4i = get_opengl_fn("glUniform4i".data);
	glUniform1fv = get_opengl_fn("glUniform1fv".data);
	glUniform2fv = get_opengl_fn("glUniform2fv".data);
	glUniform3fv = get_opengl_fn("glUniform3fv".data);
	glUniform4fv = get_opengl_fn("glUniform4fv".data);
	glUniform1iv = get_opengl_fn("glUniform1iv".data);
	glUniform2iv = get_opengl_fn("glUniform2iv".data);
	glUniform3iv = get_opengl_fn("glUniform3iv".data);
	glUniform4iv = get_opengl_fn("glUniform4iv".data);
	glUniformMatrix2fv = get_opengl_fn("glUniformMatrix2fv".data);
	glUniformMatrix3fv = get_opengl_fn("glUniformMatrix3fv".data);
	glUniformMatrix4fv = get_opengl_fn("glUniformMatrix4fv".data);
	glValidateProgram = get_opengl_fn("glValidateProgram".data);
	glVertexAttrib1d = get_opengl_fn("glVertexAttrib1d".data);
	glVertexAttrib1dv = get_opengl_fn("glVertexAttrib1dv".data);
	glVertexAttrib1f = get_opengl_fn("glVertexAttrib1f".data);
	glVertexAttrib1fv = get_opengl_fn("glVertexAttrib1fv".data);
	glVertexAttrib1s = get_opengl_fn("glVertexAttrib1s".data);
	glVertexAttrib1sv = get_opengl_fn("glVertexAttrib1sv".data);
	glVertexAttrib2d = get_opengl_fn("glVertexAttrib2d".data);
	glVertexAttrib2dv = get_opengl_fn("glVertexAttrib2dv".data);
	glVertexAttrib2f = get_opengl_fn("glVertexAttrib2f".data);
	glVertexAttrib2fv = get_opengl_fn("glVertexAttrib2fv".data);
	glVertexAttrib2s = get_opengl_fn("glVertexAttrib2s".data);
	glVertexAttrib2sv = get_opengl_fn("glVertexAttrib2sv".data);
	glVertexAttrib3d = get_opengl_fn("glVertexAttrib3d".data);
	glVertexAttrib3dv = get_opengl_fn("glVertexAttrib3dv".data);
	glVertexAttrib3f = get_opengl_fn("glVertexAttrib3f".data);
	glVertexAttrib3fv = get_opengl_fn("glVertexAttrib3fv".data);
	glVertexAttrib3s = get_opengl_fn("glVertexAttrib3s".data);
	glVertexAttrib3sv = get_opengl_fn("glVertexAttrib3sv".data);
	glVertexAttrib4Nbv = get_opengl_fn("glVertexAttrib4Nbv".data);
	glVertexAttrib4Niv = get_opengl_fn("glVertexAttrib4Niv".data);
	glVertexAttrib4Nsv = get_opengl_fn("glVertexAttrib4Nsv".data);
	glVertexAttrib4Nub = get_opengl_fn("glVertexAttrib4Nub".data);
	glVertexAttrib4Nubv = get_opengl_fn("glVertexAttrib4Nubv".data);
	glVertexAttrib4Nuiv = get_opengl_fn("glVertexAttrib4Nuiv".data);
	glVertexAttrib4Nusv = get_opengl_fn("glVertexAttrib4Nusv".data);
	glVertexAttrib4bv = get_opengl_fn("glVertexAttrib4bv".data);
	glVertexAttrib4d = get_opengl_fn("glVertexAttrib4d".data);
	glVertexAttrib4dv = get_opengl_fn("glVertexAttrib4dv".data);
	glVertexAttrib4f = get_opengl_fn("glVertexAttrib4f".data);
	glVertexAttrib4fv = get_opengl_fn("glVertexAttrib4fv".data);
	glVertexAttrib4iv = get_opengl_fn("glVertexAttrib4iv".data);
	glVertexAttrib4s = get_opengl_fn("glVertexAttrib4s".data);
	glVertexAttrib4sv = get_opengl_fn("glVertexAttrib4sv".data);
	glVertexAttrib4ubv = get_opengl_fn("glVertexAttrib4ubv".data);
	glVertexAttrib4uiv = get_opengl_fn("glVertexAttrib4uiv".data);
	glVertexAttrib4usv = get_opengl_fn("glVertexAttrib4usv".data);
	glVertexAttribPointer = get_opengl_fn("glVertexAttribPointer".data);
	glUniformMatrix2x3fv = get_opengl_fn("glUniformMatrix2x3fv".data);
	glUniformMatrix3x2fv = get_opengl_fn("glUniformMatrix3x2fv".data);
	glUniformMatrix2x4fv = get_opengl_fn("glUniformMatrix2x4fv".data);
	glUniformMatrix4x2fv = get_opengl_fn("glUniformMatrix4x2fv".data);
	glUniformMatrix3x4fv = get_opengl_fn("glUniformMatrix3x4fv".data);
	glUniformMatrix4x3fv = get_opengl_fn("glUniformMatrix4x3fv".data);
	glColorMaski = get_opengl_fn("glColorMaski".data);
	glGetBooleani_v = get_opengl_fn("glGetBooleani_v".data);
	glGetIntegeri_v = get_opengl_fn("glGetIntegeri_v".data);
	glEnablei = get_opengl_fn("glEnablei".data);
	glDisablei = get_opengl_fn("glDisablei".data);
	glIsEnabledi = get_opengl_fn("glIsEnabledi".data);
	glBeginTransformFeedback = get_opengl_fn("glBeginTransformFeedback".data);
	glEndTransformFeedback = get_opengl_fn("glEndTransformFeedback".data);
	glBindBufferRange = get_opengl_fn("glBindBufferRange".data);
	glBindBufferBase = get_opengl_fn("glBindBufferBase".data);
	glTransformFeedbackVaryings = get_opengl_fn("glTransformFeedbackVaryings".data);
	glGetTransformFeedbackVarying = get_opengl_fn("glGetTransformFeedbackVarying".data);
	glClampColor = get_opengl_fn("glClampColor".data);
	glBeginConditionalRender = get_opengl_fn("glBeginConditionalRender".data);
	glEndConditionalRender = get_opengl_fn("glEndConditionalRender".data);
	glVertexAttribIPointer = get_opengl_fn("glVertexAttribIPointer".data);
	glGetVertexAttribIiv = get_opengl_fn("glGetVertexAttribIiv".data);
	glGetVertexAttribIuiv = get_opengl_fn("glGetVertexAttribIuiv".data);
	glVertexAttribI1i = get_opengl_fn("glVertexAttribI1i".data);
	glVertexAttribI2i = get_opengl_fn("glVertexAttribI2i".data);
	glVertexAttribI3i = get_opengl_fn("glVertexAttribI3i".data);
	glVertexAttribI4i = get_opengl_fn("glVertexAttribI4i".data);
	glVertexAttribI1ui = get_opengl_fn("glVertexAttribI1ui".data);
	glVertexAttribI2ui = get_opengl_fn("glVertexAttribI2ui".data);
	glVertexAttribI3ui = get_opengl_fn("glVertexAttribI3ui".data);
	glVertexAttribI4ui = get_opengl_fn("glVertexAttribI4ui".data);
	glVertexAttribI1iv = get_opengl_fn("glVertexAttribI1iv".data);
	glVertexAttribI2iv = get_opengl_fn("glVertexAttribI2iv".data);
	glVertexAttribI3iv = get_opengl_fn("glVertexAttribI3iv".data);
	glVertexAttribI4iv = get_opengl_fn("glVertexAttribI4iv".data);
	glVertexAttribI1uiv = get_opengl_fn("glVertexAttribI1uiv".data);
	glVertexAttribI2uiv = get_opengl_fn("glVertexAttribI2uiv".data);
	glVertexAttribI3uiv = get_opengl_fn("glVertexAttribI3uiv".data);
	glVertexAttribI4uiv = get_opengl_fn("glVertexAttribI4uiv".data);
	glVertexAttribI4bv = get_opengl_fn("glVertexAttribI4bv".data);
	glVertexAttribI4sv = get_opengl_fn("glVertexAttribI4sv".data);
	glVertexAttribI4ubv = get_opengl_fn("glVertexAttribI4ubv".data);
	glVertexAttribI4usv = get_opengl_fn("glVertexAttribI4usv".data);
	glGetUniformuiv = get_opengl_fn("glGetUniformuiv".data);
	glBindFragDataLocation = get_opengl_fn("glBindFragDataLocation".data);
	glGetFragDataLocation = get_opengl_fn("glGetFragDataLocation".data);
	glUniform1ui = get_opengl_fn("glUniform1ui".data);
	glUniform2ui = get_opengl_fn("glUniform2ui".data);
	glUniform3ui = get_opengl_fn("glUniform3ui".data);
	glUniform4ui = get_opengl_fn("glUniform4ui".data);
	glUniform1uiv = get_opengl_fn("glUniform1uiv".data);
	glUniform2uiv = get_opengl_fn("glUniform2uiv".data);
	glUniform3uiv = get_opengl_fn("glUniform3uiv".data);
	glUniform4uiv = get_opengl_fn("glUniform4uiv".data);
	glTexParameterIiv = get_opengl_fn("glTexParameterIiv".data);
	glTexParameterIuiv = get_opengl_fn("glTexParameterIuiv".data);
	glGetTexParameterIiv = get_opengl_fn("glGetTexParameterIiv".data);
	glGetTexParameterIuiv = get_opengl_fn("glGetTexParameterIuiv".data);
	glClearBufferiv = get_opengl_fn("glClearBufferiv".data);
	glClearBufferuiv = get_opengl_fn("glClearBufferuiv".data);
	glClearBufferfv = get_opengl_fn("glClearBufferfv".data);
	glClearBufferfi = get_opengl_fn("glClearBufferfi".data);
	glGetStringi = get_opengl_fn("glGetStringi".data);
	glIsRenderbuffer = get_opengl_fn("glIsRenderbuffer".data);
	glBindRenderbuffer = get_opengl_fn("glBindRenderbuffer".data);
	glDeleteRenderbuffers = get_opengl_fn("glDeleteRenderbuffers".data);
	glGenRenderbuffers = get_opengl_fn("glGenRenderbuffers".data);
	glRenderbufferStorage = get_opengl_fn("glRenderbufferStorage".data);
	glGetRenderbufferParameteriv = get_opengl_fn("glGetRenderbufferParameteriv".data);
	glIsFramebuffer = get_opengl_fn("glIsFramebuffer".data);
	glBindFramebuffer = get_opengl_fn("glBindFramebuffer".data);
	glDeleteFramebuffers = get_opengl_fn("glDeleteFramebuffers".data);
	glGenFramebuffers = get_opengl_fn("glGenFramebuffers".data);
	glCheckFramebufferStatus = get_opengl_fn("glCheckFramebufferStatus".data);
	glFramebufferTexture1D = get_opengl_fn("glFramebufferTexture1D".data);
	glFramebufferTexture2D = get_opengl_fn("glFramebufferTexture2D".data);
	glFramebufferTexture3D = get_opengl_fn("glFramebufferTexture3D".data);
	glFramebufferRenderbuffer = get_opengl_fn("glFramebufferRenderbuffer".data);
	glGetFramebufferAttachmentParameteriv = get_opengl_fn("glGetFramebufferAttachmentParameteriv".data);
	glGenerateMipmap = get_opengl_fn("glGenerateMipmap".data);
	glBlitFramebuffer = get_opengl_fn("glBlitFramebuffer".data);
	glRenderbufferStorageMultisample = get_opengl_fn("glRenderbufferStorageMultisample".data);
	glFramebufferTextureLayer = get_opengl_fn("glFramebufferTextureLayer".data);
	glMapBufferRange = get_opengl_fn("glMapBufferRange".data);
	glFlushMappedBufferRange = get_opengl_fn("glFlushMappedBufferRange".data);
	glBindVertexArray = get_opengl_fn("glBindVertexArray".data);
	glDeleteVertexArrays = get_opengl_fn("glDeleteVertexArrays".data);
	glGenVertexArrays = get_opengl_fn("glGenVertexArrays".data);
	glIsVertexArray = get_opengl_fn("glIsVertexArray".data);
	glDrawArraysInstanced = get_opengl_fn("glDrawArraysInstanced".data);
	glDrawElementsInstanced = get_opengl_fn("glDrawElementsInstanced".data);
	glTexBuffer = get_opengl_fn("glTexBuffer".data);
	glPrimitiveRestartIndex = get_opengl_fn("glPrimitiveRestartIndex".data);
	glCopyBufferSubData = get_opengl_fn("glCopyBufferSubData".data);
	glGetUniformIndices = get_opengl_fn("glGetUniformIndices".data);
	glGetActiveUniformsiv = get_opengl_fn("glGetActiveUniformsiv".data);
	glGetActiveUniformName = get_opengl_fn("glGetActiveUniformName".data);
	glGetUniformBlockIndex = get_opengl_fn("glGetUniformBlockIndex".data);
	glGetActiveUniformBlockiv = get_opengl_fn("glGetActiveUniformBlockiv".data);
	glGetActiveUniformBlockName = get_opengl_fn("glGetActiveUniformBlockName".data);
	glUniformBlockBinding = get_opengl_fn("glUniformBlockBinding".data);
	glMinSampleShading = get_opengl_fn("glMinSampleShading".data);
	glBlendEquationi = get_opengl_fn("glBlendEquationi".data);
	glBlendEquationSeparatei = get_opengl_fn("glBlendEquationSeparatei".data);
	glBlendFunci = get_opengl_fn("glBlendFunci".data);
	glBlendFuncSeparatei = get_opengl_fn("glBlendFuncSeparatei".data);
	glDrawArraysIndirect = get_opengl_fn("glDrawArraysIndirect".data);
	glDrawElementsIndirect = get_opengl_fn("glDrawElementsIndirect".data);
	glUniform1d = get_opengl_fn("glUniform1d".data);
	glUniform2d = get_opengl_fn("glUniform2d".data);
	glUniform3d = get_opengl_fn("glUniform3d".data);
	glUniform4d = get_opengl_fn("glUniform4d".data);
	glUniform1dv = get_opengl_fn("glUniform1dv".data);
	glUniform2dv = get_opengl_fn("glUniform2dv".data);
	glUniform3dv = get_opengl_fn("glUniform3dv".data);
	glUniform4dv = get_opengl_fn("glUniform4dv".data);
	glUniformMatrix2dv = get_opengl_fn("glUniformMatrix2dv".data);
	glUniformMatrix3dv = get_opengl_fn("glUniformMatrix3dv".data);
	glUniformMatrix4dv = get_opengl_fn("glUniformMatrix4dv".data);
	glUniformMatrix2x3dv = get_opengl_fn("glUniformMatrix2x3dv".data);
	glUniformMatrix2x4dv = get_opengl_fn("glUniformMatrix2x4dv".data);
	glUniformMatrix3x2dv = get_opengl_fn("glUniformMatrix3x2dv".data);
	glUniformMatrix3x4dv = get_opengl_fn("glUniformMatrix3x4dv".data);
	glUniformMatrix4x2dv = get_opengl_fn("glUniformMatrix4x2dv".data);
	glUniformMatrix4x3dv = get_opengl_fn("glUniformMatrix4x3dv".data);
	glGetUniformdv = get_opengl_fn("glGetUniformdv".data);
	glGetSubroutineUniformLocation = get_opengl_fn("glGetSubroutineUniformLocation".data);
	glGetSubroutineIndex = get_opengl_fn("glGetSubroutineIndex".data);
	glGetActiveSubroutineUniformiv = get_opengl_fn("glGetActiveSubroutineUniformiv".data);
	glGetActiveSubroutineUniformName = get_opengl_fn("glGetActiveSubroutineUniformName".data);
	glGetActiveSubroutineName = get_opengl_fn("glGetActiveSubroutineName".data);
	glUniformSubroutinesuiv = get_opengl_fn("glUniformSubroutinesuiv".data);
	glGetUniformSubroutineuiv = get_opengl_fn("glGetUniformSubroutineuiv".data);
	glGetProgramStageiv = get_opengl_fn("glGetProgramStageiv".data);
	glPatchParameteri = get_opengl_fn("glPatchParameteri".data);
	glPatchParameterfv = get_opengl_fn("glPatchParameterfv".data);
	glBindTransformFeedback = get_opengl_fn("glBindTransformFeedback".data);
	glDeleteTransformFeedbacks = get_opengl_fn("glDeleteTransformFeedbacks".data);
	glGenTransformFeedbacks = get_opengl_fn("glGenTransformFeedbacks".data);
	glIsTransformFeedback = get_opengl_fn("glIsTransformFeedback".data);
	glPauseTransformFeedback = get_opengl_fn("glPauseTransformFeedback".data);
	glResumeTransformFeedback = get_opengl_fn("glResumeTransformFeedback".data);
	glDrawTransformFeedback = get_opengl_fn("glDrawTransformFeedback".data);
	glDrawTransformFeedbackStream = get_opengl_fn("glDrawTransformFeedbackStream".data);
	glBeginQueryIndexed = get_opengl_fn("glBeginQueryIndexed".data);
	glEndQueryIndexed = get_opengl_fn("glEndQueryIndexed".data);
	glGetQueryIndexediv = get_opengl_fn("glGetQueryIndexediv".data);
}
